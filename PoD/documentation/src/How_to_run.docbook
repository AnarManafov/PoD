<!--
How to run
-->
  <chapter id="How_to_run">
    <title>How to run</title>
        <chapterinfo>
            <releaseinfo>$Revision$</releaseinfo>
               <pubdate>$Date$</pubdate>
              <publisher><publishername>$LastChangedBy$</publishername></publisher>
       </chapterinfo>
           
    <sect1 id="Environment">
      <title>Environment</title>
      <para>
      In order to enable PoD's environment you need to source the <filename>PoD_env.sh</filename> script:
<screen>
<command>cd /tmp/test/PoDpackage</command>
<command>source PoD_env.sh</command>
</screen>
		Also don't forget, before starting PoD the ROOT should be in the PATH as well.
      </para>    
    </sect1>
    
    <sect1 id="Services">
      <title>Services</title>
      <para>
      Start PAConsole, a GUI application, which automates and helps to manage most of the operations.
<screen>
<command>PAConsole&amp;</command>
</screen>
        The <xref linkend="PAConsole_Server"/> shows a screen shot of PAConsole's Server page. Currently PoD
        requires two services: xrootd and PROOFAgent (+ oldb, a part of xrootd, if you want to use pool workers.
        Pool workers are not officially supported).

        <para><figure float="0" id="PAConsole_Server">
        <title>PAConsole: Server page</title>
        <screenshot><mediaobject>
        <imageobject>
        <imagedata fileref="PAConsole_Server_snapshot.png" format="PNG"/>
        </imageobject>
        <textobject>
        <phrase></phrase>
        </textobject>
        </mediaobject></screenshot>
        </figure></para>

        Click the <guibutton>Start</guibutton> button in order to start PoD services. To stop PoD
        the <guibutton>Stop</guibutton> button should be pressed. Status of the PoD server is retrieved automatically
        by a timer event.
        </para>
        
        <para>
        The <xref linkend="PAConsole_Server"/> shows the interface after the <guibutton>Start</guibutton> button has
        been pressed and PoD services are up - PoD Server is up and running.
      </para>
    </sect1>

	 <sect1 id="JobManagerPlugins">
      <title>Job Manager plug-ins</title>
      <para>
      The next step is to submit remote workers using PoD's job manager.
      Starting from version 2.0.7 the PoD project supports plug-ins. Submitting a remote jobs is done via a job manager plug-ins.
      That means PoD could be used on different Grid and batch sites. For instance currently PoD supports gLite and LSF job submissions.
      It also possible to use a combination of plug-ins to get PROOF workers on Grid worker nodes and local batch machines in the same time. 
      </para>
      <para>
       For the gLite plug-in specific, please see <xref linkend="gLite_plugin"/>.
       </para>
       <para>
       For the LSF plug-in specific, please see <xref linkend="LSF_plugin"/>.
       </para>
    </sect1>
    
    <sect1 id="PROOF_workers">
      <title>PROOF workers</title>
      <para>
       As soon as a single job reaches remote worker node (WN), it tries to connect to PoD server to transfer information
       about itself and environment of WN. When negotiations are done and PoD server accepts WNs, it became a normal
       PROOF Worker for the user. A list of accepted workers could be checked on Workers page of PAConsle
       (see the <xref linkend="PAConsole_Workers"/>).        
          <para><figure float="0" id="PAConsole_Workers">
        <title>PAConsole: Workers</title>
        <screenshot><mediaobject>
        <imageobject>
        <imagedata fileref="PAConsole_Workers_LSF_snapshot.png" format="PNG"/>
        </imageobject>
        <textobject>
        <phrase></phrase>
        </textobject>
        </mediaobject></screenshot>
        </figure></para>
        It is not required to wait until all requested workers will be connected. Users could start analysis after
        reasonable number of workers are on-line, even after the first connected worker one could start the analysis.
        When other workers arrive, the ROOT (PROOF) session must be restarted in order to reconnect to the newly
        arrived workers.                 
       </para>
       <tip><para>
       PoD supports reconnection. That means if your analysis has a bug or a root session crashed you don't
       need to resubmit PoD jobs. You just need to close current root session, open it again. PoD will manage
       reconnection with its worker nodes automatically. Worker nodes will be on-line until the PROOFAgent service is on-line or
       until s Grid and/or batch queue time is over.
       </para></tip>
       </sect1>

       
    <sect1 id="PAConsole_preferences">
      <title>Preferences</title>
      <para>
      	
        Using a preferences page (see <xref linkend="PAConsole_Preferences"/>) users are able to change updated interval of
        the remote jobs monitoring and the available
        PROOF workers monitoring. When many jobs are submitted it is useful to increase the update intervals,
        otherwise system might be overloaded. But this settings depend on user preferences and available system resources.
        <para><figure float="0" id="PAConsole_Preferences">
        <title>PAConsole: Preferences</title>
        <screenshot><mediaobject>
        <imageobject>
        <imagedata fileref="PAConsole_Preferences.png" format="PNG"/>
        </imageobject>
        <textobject>
        <phrase></phrase>
        </textobject>
        </mediaobject></screenshot>
        </figure></para>
      </para>  
    </sect1>
             
    <sect1 id="Analysis">
      <title>Analysis</title>
      <para>
      Now when your remote PROOF workers (PoD workers) are on-line, you can process you ROOT/PROOF
      analysis normally, if it would be a usual PROOF session.      
       </para>
       <para>
       For an example analysis, please see <xref linkend="How_to_test"/>.
       </para>
       </sect1>      
      
    <sect1 id="How_to_shut_down_PoD">
      <title>How to shut down PoD</title>
      <para>
      In order to shut down PoD the PoD server should be stopped. On the Server page, click the
      <guibutton>Stop</guibutton> button. After that all remote workers will be stopped automatically and
      remote (Grid or batch) job slots will be freed. If you continue to monitor your remote jobs status on a job manager's
      plug-in page, after some time statuses of jobs should be equal to "Done".
      </para>
      </sect1>
           
  </chapter>
 
