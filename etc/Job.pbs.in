#!/usr/bin/env bash
#/************************************************************************/
##/**
## * @file Job.pbs
## * @brief a PBS job script
## * @author Anar Manafov A.Manafov@gsi.de
## *//*
##
##        version number:    $LastChangedRevision$
##        created by:        Anar Manafov
##                           2010-03-12
##        last changed by:   $LastChangedBy$ $LastChangedDate$
##
##         Copyright (c) 2010-2012 GSI, Scientific Computing division. All rights reserved.
##*************************************************************************/

######################################################
# The following variables are expected to set:
# $POD_WRK_SCRIPT
# $POD_UI_LOCATION
# $POD_UI_LOG_LOCATION
WRK_SCRIPT=$(basename "$POD_WRK_SCRIPT")
######################################################
#
#  -o StrictHostKeyChecking=no - on some sites admins forget to properly configure host keys 
SCP="scp -o StrictHostKeyChecking=no"
UI_HOST=${PBS_O_HOST}
# PARENT_PBS_JOBID is just a PBS_JOBID without an "-ARRAY_INDEX" part
# We consider, that the first digits up to the first non-digit character is a parent index.
PARENT_PBS_JOBID=$(echo $PBS_JOBID | egrep -o '^[[:digit:]]*')
UI_LOG_DIR=$POD_UI_LOG_LOCATION/$PARENT_PBS_JOBID

# Subjob index in job array:
# in PBS we have $PBS_ARRAYID
# in PBS Pro we have $PBS_ARRAY_INDEX
ARRAYID=$PBS_ARRAYID
if [ -z  $ARRAYID ]; then
   ARRAYID=$PBS_ARRAY_INDEX
fi
###############################################################
#
#    Function: Untar payload content
#
###############################################################
payload_uuencode=1
payload_binary=0
function untar_payload()
{
	match=$(grep --text --line-number '^PAYLOAD:$' $0 | cut -d ':' -f 1)
	payload_start=$((match + 1))
	if [[ $payload_binary -ne 0 ]]; then
		tail -n +$payload_start $0 | tar -xzvf -
	fi
	if [[ $payload_uuencode -ne 0 ]]; then
		tail -n +$payload_start $0 | uudecode | tar -xzvf -
	fi
}
###############################################################
#
#    Function: Transfer files from UI to WN, using shared home
#    This function checks, whether SH FS is present.                
#
###############################################################
try_shared_home()
{
   cp ${POD_WRK_PKG} ${WRK_DIR}/
   ret1=$?
   cp ${POD_WRK_SCRIPT} ${WRK_DIR}/
   ret2=$?
   
   if (( $ret1 == 0 && $ret2 == 0 )); then
      export POD_SHARED_HOME="YES"
      echo "PoD has detected a shared home file system."
   fi
}
###############################################################
#
#    Function: Transfer files from UI to WN.                  
#
###############################################################
stagein()
{
   echo ""
   echo "Writing files in node's directory  ${WRK_DIR}"
 
   try_shared_home
}
###############################################################
#
#    Function: Transfer files from WN to UI.                  
#
###############################################################
stageout()
{
   eval upload_job_log=$($WRK_DIR/pod-user-defaults -c $WRK_DIR/PoD.cfg --key pbs_plugin.upload_job_log)

   if [ "$upload_job_log" = "1" ]; then
      echo "Staging the log files out..."
      echo "log dir: "$UI_LOG_DIR

      if [ -z "$POD_SHARED_HOME" ]; then
         $SCP $WRK_DIR/proof_log.tgz $UI_HOST:$UI_LOG_DIR/proof_log.$ARRAYID.tgz
         $SCP $WRK_DIR/xpd.log $UI_HOST:$UI_LOG_DIR/xpd.$ARRAYID.log
         $SCP $WRK_DIR/pod-agent.client.log $UI_HOST:$UI_LOG_DIR/pod-agent.client.$ARRAYID.log
      else
         cp $WRK_DIR/proof_log.tgz $UI_LOG_DIR/proof_log.$ARRAYID.tgz
         cp $WRK_DIR/xpd.log $UI_LOG_DIR/xpd.$ARRAYID.log
         cp $WRK_DIR/pod-agent.client.log $UI_LOG_DIR/pod-agent.client.$ARRAYID.log 
      fi
   fi
}

###############################################################
#
# create a working folder
#
###############################################################
WRK_DIR=$(mktemp -d $TMPDIR/PoD_XXXXXXXXXX)
if [ -z $WRK_DIR ]; then
   echo "Error: Can't create a working directory."
   exit 1
fi
echo "working directory: " $WRK_DIR
cd $WRK_DIR || exit 1
# global variables
# we need to define lib path to ensure that we use proper libraries
export PATH=$WRK_DIR:$PATH 
export LD_LIBRARY_PATH=$WRK_DIR:$LD_LIBRARY_PATH
###############################################################
#
# input files.
#
###############################################################
stagein
################################################################
#
# Untar payload
#
###############################################################
untar_payload
################################################################
#
# POD WORKER
#
###############################################################
$WRK_DIR/$WRK_SCRIPT
###############################################################
#
# get all logs
#
###############################################################
stageout
###############################################################
#
# remove working folder
#
###############################################################
if [[ -d $WRK_DIR ]]; then
   rm -rf $WRK_DIR
fi

exit 0
