#!/usr/bin/env bash
#/************************************************************************/
##/**
## * @file Job.oge
## * @brief a OGE/SGE job script
## * @author Anar Manafov A.Manafov@gsi.de
## *//*
##
##        version number:    $LastChangedRevision$
##        created by:        Anar Manafov
##                           2010-10-03
##        last changed by:   $LastChangedBy$ $LastChangedDate$
##
##         Copyright (c) 2010 GSI, Scientific Computing group. All rights reserved.
##*************************************************************************/

######################################################
# $POD_UI_LOCATION and $POD_UI_LOG_LOCATION are set by the OGE plug-in
UI_WRK_DIR=$POD_UI_LOCATION
UI_LOG_DIR=$POD_UI_LOG_LOCATION/$JOB_ID
###############################################################
#
#    Function: Transfer files from UI to WN, using shared home
#    This function checks, whether SH FS is present.                
#
###############################################################
try_shared_home()
{
   cp ${POD_UI_LOCATION}/etc/pod-worker.tar.gz ${WRK_DIR}/pod-worker.tar.gz
   ret1=$?
   cp ${POD_UI_LOCATION}/etc/PoDWorker.sh ${WRK_DIR}/PoDWorker.sh
   ret2=$?
   
   if (( $ret1 == 0 && $ret2 == 0 ))
      export POD_SHARED_HOME="YES"
      echo "PoD has detected a shared home file system."
   fi
}
###############################################################
#
#    Function: Transfer files from UI to WN.                  
#
###############################################################
stagein()
{
 echo ""
 echo "Transferring files from the server to the compute node"
 echo "Writing files in node's directory  ${WRK_DIR}"
 
 try_shared_home

 if [ -z "$POD_SHARED_HOME" ]; then
    echo "Error: can't detect a shared home file system." 
    echo "This version of SGE/OGE plug-in supports only shared home file systems."
    exit 1
 fi

 echo "Files in node work directory are as follows:"
 ls -l
}
###############################################################
#
#    Function: Transfer files from WN to UI.                  
#
###############################################################
stageout()
{
 eval upload_job_log=$($WRK_DIR/pod-user-defaults -c $WRK_DIR/PoD.cfg --key pbs_plugin.upload_job_log)

 if [ "$upload_job_log" = "1" ]; then
    echo "Staging the log files out..."
    echo "log dir: "$UI_LOG_DIR

    cp $WRK_DIR/proof_log.tgz $UI_LOG_DIR/proof_log.$SGE_TASK_ID.tgz
    cp $WRK_DIR/xpd.log $UI_LOG_DIR/xpd.$SGE_TASK_ID.log
    cp $WRK_DIR/pod-agent.client.log $UI_LOG_DIR/pod-agent.client.$SGE_TASK_ID.log 
fi
}

echo "Starting PoD worker on the host: $HOSTNAME"
###############################################################
#
# create a working folder
#
###############################################################
WRK_DIR=$(mktemp -d /tmp/PoD_XXXXXXXXXX)
if [ -z $WRK_DIR ]; then
   echo "Error: Can't create a working directory."
   exit 1
fi
echo "working directory: " $WRK_DIR
cd $WRK_DIR || exit 1
###############################################################
#
# input files.
#
###############################################################
stagein
################################################################
#
# POD WORKER
#
# Here you can specify your own version of ROOT
# or you can delete -r <ROOTSYS> parameter and 
# PoDWorker will use its own settings
#
###############################################################
$WRK_DIR/PoDWorker.sh
###############################################################
#
# get all logs
#
###############################################################
stageout
###############################################################
#
# remove working folder
#
###############################################################
if [[ -d $WRK_DIR ]]; then
	rm -rf $WRK_DIR
fi

exit 0
