#!/usr/bin/env bash
#/************************************************************************/
##/**
## * @file Job.lsf
## * @brief an LSF job script
## * @author Anar Manafov A.Manafov@gsi.de
## *//*
##
##        version number:    $LastChangedRevision$
##        created by:        Anar Manafov
##                           2008-10-13
##        last changed by:   $LastChangedBy$ $LastChangedDate$
##
##         Copyright (c) 2008-2010 GSI, Scientific Computing group. All rights reserved.
##*************************************************************************/

##
## Important: Assuming a shared file system in LSF!
##
######################################################
# The following variables are expected to set:
# $POD_WRK_PKG
# $POD_WRK_SCRIPT
# $POD_UI_LOCATION
# $POD_UI_LOG_LOCATION
WRK_SCRIPT=$(basename "$POD_WRK_SCRIPT")
###############################################################
#
#    Function: Transfer files from UI to WN, using shared home
#    This function checks, whether SH FS is present.                
#
###############################################################
try_shared_home()
{
   cp ${POD_WRK_PKG} ${WRK_DIR}/
   ret1=$?
   cp ${POD_WRK_SCRIPT} ${WRK_DIR}/
   ret2=$?
   
   if (( $ret1 == 0 && $ret2 == 0 )); then
      export POD_SHARED_HOME="YES"
      echo "PoD has detected a shared home file system."
   fi
}
###############################################################
#
#    Function: Transfer files from UI to WN.                  
#
###############################################################
stagein()
{
   echo ""
   echo "Transferring files from the server to the compute node"
   echo "Writing files in node's directory  ${WRK_DIR}"
 
   try_shared_home

   if [ -z "$POD_SHARED_HOME" ]; then
      echo "Error: can't detect a shared home file system." 
      echo "This version of LSF plug-in supports only shared home file systems."
      exit 1
   fi

   echo "Files in node work directory are as follows:"
   ls -l
}
###############################################################
#
#    Function: Transfer files from WN to UI.                  
#
###############################################################
stageout()
{
   user_defaults="$WRK_DIR/pod-user-defaults"
   pod_cfg=$WRK_DIR/PoD.cfg
   #
   ## logs
   #
   eval LOG_DIR=$($user_defaults -c $pod_cfg --key server.logfile_dir)/$LSB_JOBID
   mkdir -p $LOG_DIR

   upload_job_log=$($user_defaults -c $pod_cfg --key lsf_plugin.upload_job_log)

   echo "PoD UI Log dir: $LOG_DIR"
   echo "PoD upload jobs log: $upload_job_log"

   if [ "$upload_job_log" = "1" ]; then
      cp $WRK_DIR/proof_log.tgz $LOG_DIR/proof_log_$LSB_JOBINDEX.tgz
      cp $WRK_DIR/xpd.log $LOG_DIR/xpd_$LSB_JOBINDEX.log
      cp $WRK_DIR/pod-agent.client.log $LOG_DIR/pod-agent.client_$LSB_JOBINDEX.log 
   fi
}

echo "Starting PoD worker on the host: $HOSTNAME"
###############################################################
#
# create a working folder
#
###############################################################
WRK_DIR=$(mktemp -d /tmp/PoD_XXXXXXXXXX)
if [ -z $WRK_DIR ]; then
   echo "Error: Can't create a working directory."
   exit 1
fi
echo "working directory: " $WRK_DIR
cd $WRK_DIR || exit 1
# global variables
# we need to define lib path to ensure that we use proper libraries
export PATH=$WRK_DIR:$PATH 
export LD_LIBRARY_PATH=$WRK_DIR:$LD_LIBRARY_PATH
###############################################################
#
# input files.
#
###############################################################
stagein
################################################################
#
# POD WORKER
#
# Here you can specify your own version of ROOT
# or you can delete -r <ROOTSYS> parameter and 
# PoDWorker will use its own settings
#
###############################################################
$WRK_DIR/$WRK_SCRIPT
###############################################################
#
# get all logs
#
###############################################################
stageout
###############################################################
#
# remove working folder
#
###############################################################
if [[ -d $WRK_DIR ]]; then
   rm -rf $WRK_DIR
fi

exit 0

