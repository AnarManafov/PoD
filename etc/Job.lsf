#! /bin/bash

#/************************************************************************/
##/**
## * @file Job.lsf
## * @brief an LSF job script
## * @author Anar Manafov A.Manafov@gsi.de
## *//*
##
##        version number:    $LastChangedRevision$
##        created by:        Anar Manafov
##                           2008-10-13
##        last changed by:   $LastChangedBy$ $LastChangedDate$
##
##        Copyright (c) 2008-2009 GSI GridTeam. All rights reserved.
##*************************************************************************/

##
## Important: Assuming a shared file system in LSF!
##

######################################################

######################################################
#
## create a working folder
#
WRK_DIR=`mktemp -d /tmp/PoD_XXXXXXXXXX`
echo "working directory: " $WRK_DIR
cd $WRK_DIR || return 1
#
## input files.
## we don't use BSUB-f since it doesn't support env. variables in paths
#
cp $POD_LOCATION/etc/xpd.cf $WRK_DIR/xpd.cf
cp $POD_LOCATION/etc/PoD.cfg $WRK_DIR/PoD.cfg
cp $POD_LOCATION/etc/server_info.cfg $WRK_DIR/server_info.cfg
cp $POD_LOCATION/etc/PoDWorker.sh $WRK_DIR/PoDWorker.sh
#
## log dir
## this needs to be executed before PoDWorker.sh,
## since the script will overwrite $POD_LOCATION to worker's local value but we want to use server's value here
## in case if logfile_dir contains $POD_LOCATION
#
eval LOG_DIR=$($POD_LOCATION/bin/pod-user-defaults-lite -c $WRK_DIR/PoD.cfg --section server --key logfile_dir)/$LSB_JOBID
mkdir -p $LOG_DIR
#
## Here you can specify your own version of ROOT
## or you can delete -r <ROOTSYS> parameter and 
## PoDWorker will use its own settings
#
$WRK_DIR/PoDWorker.sh
#
## logs
#
upload_job_log=$($POD_LOCATION/bin/pod-user-defaults-lite -c $WRK_DIR/PoD.cfg --section lsf_plugin --key upload_job_log)
if [ "$upload_job_log" = "yes" ]; then
   cp $WRK_DIR/proof_log.tgz $LOG_DIR/proof_log_$LSB_JOBINDEX.tgz
   cp $WRK_DIR/xpd.log $LOG_DIR/xpd_$LSB_JOBINDEX.log
   cp $WRK_DIR/pod-agent.client.log $LOG_DIR/pod-agent.client_$LSB_JOBINDEX.log 
fi

if [[ -d $WRK_DIR ]]; then
	rm -rf $WRK_DIR
fi

exit 0
