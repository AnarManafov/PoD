<!--
Installation
-->
<chapter id="Installation"><title>Installation</title>
<chapterinfo>
</chapterinfo>

    <para>
        PoD supports Private and Shared installations.
    </para>
    <para>
        A Private Installation - it is when a user installs PoD for individual use to his/her local folder.
        Any Private Installation can be used by other users as well. It's just a matter of file privileges.
    </para>
    <para>
        A Shared Installation - it is when a site administrator installs PoD
        in some central location, so it can be shared by many users. This type of installation may be convenient for some users,
        since they don't need to install PoD by their own. In case of a shared Installation
        you need to execute one additional step, see <xref linkend="step5"/>. All the rest is the same as with Private Installations.
    </para>
    <para>
        Be advised, that in both cases PoD acts identically and always provides private clusters, one for each user.
        In case of a shared installation, users share only binaries and configurations, but each user get's its own PoD instance and can't disturb other users.
        Each user can tune PoD by changing the PoD user defaults configuration in <filename>$HOME/.PoD/PoD.cfg</filename>.
    </para>
    
<sect1 id="step1"><title>Step #1: Unpack the source</title>
   <para>
   Unpack <application>PoD</application> tarball:
<screen>
<command>tar -xzvf <replaceable>PoD-X.Y.Z-Source.tar.gz</replaceable></command>
</screen>
   Tar will created a new directory <filename class="directory">./PoD-X.Y.Z-Source</filename>,
   where <replaceable>X.Y.Z</replaceable> represents a version of <application>PoD</application>.
   </para>
</sect1>


<sect1 id="step2"><title>Step #2: Configure the source</title>
   <para>
   Change to the PoD source directory:
<screen>
<command>cd <replaceable>./PoD-X.Y.Z-Source</replaceable></command>
</screen>
   You can adjust some configuration settings in the <filename>BuildSetup.cmake</filename> bootstrap file.
   The following is a list of variables:
   <table><title>PoD configuration variables</title>
      <tgroup cols="2">
      <thead>
         <row>
            <entry>Variable</entry>
            <entry>Description</entry>
      	 </row>
      </thead>
      <tbody>
         <row>
            <entry>CMAKE_INSTALL_PREFIX</entry>
            <entry>Install path prefix, prepended onto install directories.(default $HOME/PoD/[PoD_Version])</entry>
         </row>
         <row>
            <entry>CMAKE_BUILD_TYPE</entry>
            <entry>Set cmake build type. Possible options are: None, Debug, Release, RelWithDebInfo, MinSizeRel (default Release)</entry>
         </row>
      	 <row>
            <entry>BUILD_GLITE_PLUGIN</entry>
            <entry>Switch on or off the configuration and build of GUI for PoD gLite plug-in. Possible options are: ON/OFF (default ON)</entry>
      	 </row>
      	 <row>
            <entry>BUILD_LSF_PLUGIN</entry>
            <entry>Switch on or off the configuration and build of GUI for PoD LSF plug-in. Possible options are: ON/OFF (default ON)</entry>
      	 </row>
      	 <row>
            <entry>BUILD_PBS_PLUGIN</entry>
            <entry>Switch on or off the configuration and build of GUI for PoD PBS plug-in. Possible options are: ON/OFF (default ON)</entry>
      	 </row>
      	 <row>
            <entry>BUILD_GE_PLUGIN</entry>
            <entry>Switch on or off the configuration and build of GUI for PoD Grid Engine plug-in. Possible options are: ON/OFF (default ON)</entry>
      	 </row>
      </tbody>
      </tgroup>
   </table>
   </para>
   <para>
      Now, prepare a build directory for an out-of-source build and configure the source:
<screen>
<command>mkdir build</command>
<command>cd build</command>
<command>cmake -C ../BuildSetup.cmake ..</command>
</screen>
   </para>
   
    <tip><para>
       If for some reason, for example a missing dependency, configuration failed. After you get the issue fixed, right before starting the <command>cmake</command> command
       it is recommended to delete everything in the build directory recursively. This will guaranty a clean build every time the
       source configuration is restarted.
    </para></tip>
</sect1>


<sect1 id="step3"><title>Step #3: Build and install</title>
   <para>
      Issue the following commands to build and install PoD:
<screen>
<command>make</command>
<command>make install</command>
</screen>
      <note><title>Installation Prefix</title>
         <para>
         Please note, that by default <application>PoD</application> will be installed in <envar>$HOME</envar>/PoD/X.Y.Z, where X.Y.Z is a version of
         <application>PoD</application>.
         However users can change this behavior by setting the install prefix path in the bootstrap script <filename>BuildSetup.cmake</filename>.
         Just uncomment the setting of CMAKE_INSTALL_PREFIX variable and change dummy MY_PATH_HERE to a desired path.
      </para></note>
   </para>
</sect1>


<sect1 id="step4"><title>Step #4: PoD Environment</title>
   <para>
      In order to enable PoD's environment you need to source the <filename>PoD_env.sh</filename> script. Change to your newly installed PoD directory and issue:
<screen>
<command>cd <replaceable>[PoD INSTALL DIRECTORY]</replaceable></command>
<command>source PoD_env.sh</command>
</screen>
      You need to source this script every time before using <application>PoD</application> in a new system shell.
      Simplify it by sourcing the script in your bash profile.
   </para>
   <para>
      Now the installation is done. But if you were preparing a shared installation, then please see the <xref linkend="step5"/> as well.
      <important><para>
       	If there were problems during the installation, please see <xref linkend="Support"/> or <xref linkend="Known_Issues"/>.
      </para></important>
   </para>
</sect1>

    <sect1 id="step5"><title>Step #5: PoD shared Installation</title>
        <para>
            If you installed PoD in some central location (by changing the default CMAKE_INSTALL_PREFIX, see <xref linkend="step2"/>),
            than you need to make one simple additional step.
        </para>
        <para>
            Normally central installations or shared installations are restricted for read-only for users.
            You therefore need to provide pre-compiled binaries for worker nodes, which are kept in <envar>$POD_LOCATION</envar>, so that other users could simple re-use them.
            To do that just issue the following command:
        </para>
<screen>
<command>pod-server getbins</command>
</screen>
        <para>
            Next time (TO-DO) we will provide a documentation on how to prepare your own binaries for worker nodes.
        </para>
    </sect1>

</chapter>
