<!-- 
Installation 
-->
  <chapter id="Installation">
    <title>Installation</title>
     	<chapterinfo>
   	</chapterinfo>
    
    <sect1 id="step1">
      <title>Step #1</title>
      <para>Choose a directory where you want to install <application>PoD</application>,
      we take <filename class="directory">/tmp/test</filename> as an example. Unpack <application>PoD</application> tarball to this directory:
<screen>
<command>tar -C /tmp/test -xzvf <replaceable>PoD_Package.2.1.2.tar.gz</replaceable></command>
</screen>
		Tar will created a new directory <filename class="directory">/tmp/test/PoD_Package</filename>,
		where <application>PoD</application> package will be located.</para>
    </sect1>
    <sect1 id="step2">
      <title>Step #2</title>
      <para>
      Change to the PoD directory:
<screen>
<command>cd <replaceable>/tmp/test/PoD_Package</replaceable></command>
</screen>
      You may want to change some setting in the <filename>install</filename> script.
      Here we have a description of the variables, which could be used to adjust PoD installation:
      <table>
		<title>PoD configuration variables</title>
  		<tgroup cols="2">
    		<thead>
      	<row>
        		<entry>Variable</entry>
        		<entry>Description</entry>        
      	</row>
    		</thead>
    		<tbody>
      		<row>
        			<entry>GAW_LINK</entry>
        			<entry>An URL of glite-api-wrapper's source tarball</entry>        
      		</row>
      		<row>
        			<entry>GAW_PKG</entry>
        			<entry>A name of glite-api-wrapper package (<filename>glite-api-wrapper-3.1.0.1783</filename> for example).</entry>        
      		</row>
      		<row>
        			<entry>GAW_OPTIONS</entry>
        			<entry>Options, which should be given to the configure utility of glite-api-wrapper.</entry>        
      		</row>
      		<row>
        			<entry>pod_agent_PKG</entry>
        			<entry>A name of pod-agent package.</entry>        
      		</row>
      		<row>
        			<entry>pod_agent_LINK</entry>
        			<entry>An URL of pod-agent's source tarball</entry>        
      		</row>
      		<row>
        			<entry>pod_agent_OPTIONS</entry>
        			<entry>Options, which should be given to the pod-agent build utility (cmake).</entry>        
      		</row>
      		<row>
        			<entry>pod_console_PKG</entry>
        			<entry>A name of pod_console package.</entry>        
      		</row>
      		<row>
        			<entry>pod_console_LINK</entry>
        			<entry>An URL of pod-conolse's source tarball</entry>        
      		</row>
      		<row>
        			<entry>pod_console_OPTIONS</entry>
        			<entry>Options, which should be given to the pod-console build utility (cmake).</entry>        
      		</row>
      		<row>
        			<entry>GLITE_LOCATION</entry>
        			<entry>A gLite UI location path.</entry>
      		</row>
      		<row>
        			<entry>XERCESC_LOCATION</entry>
        			<entry>A full path to the Xerces-C library installation directory. [<filename>$GLITE_LOCATION/../external/opt/xerces-c</filename>]</entry>
      		</row>
      		<row>
        			<entry>CLASSADS_LOCATION</entry>
        			<entry>A full path to the ClassAds library installation directory. [<filename>$GLITE_LOCATION/../classads</filename>]</entry>
      		</row>
      		<row>
        			<entry>BOOST_LOCATION</entry>
        			<entry>A full path to the BOOST libraries installation directory. [<filename>$GLITE_LOCATION/../external/usr/</filename>]</entry>        
      		</row>
      		<row>
        			<entry>GRIDSITE_INSTALL_PATH</entry>
        			<entry>A full path to the GridSite library installation directory. [<filename>$GLITE_LOCATION/../external/usr/</filename>]</entry>        
      		</row>
    		</tbody>
   	</tgroup>
		</table>
		<note><para>
        If variables such as GLITE_LOCATION, XERCESC_LOCATION, CLASSADS_LOCATION,
        BOOST_LOCATION, GRIDSITE_INSTALL_PATH are not defined, then PoD modules will try to find according libraries
        during configuration.
		</para></note>
      </para>
    </sect1>
    <sect1 id="step3">
      <title>Step #3</title>
      <para>
            Now you have two choices. Either build PoD from source or just reconfigure it.
            To build from source, execute installation script, which will perform downloads of required modules,
      build them and configure <application>PoD</application> for the first run:
<screen>
<command>./install -b</command>
</screen>
or
<screen>
<command>./install -c</command>
</screen>
if you downloaded a precompiled binary of PoD and want just reconfigure it to use in a new location.
      </para>
      <important><para>
        The <command>./install</command> command must be issued from the root of the <application>PoD</application> directory.
		</para></important> 
    </sect1>

    <sect1 id="step4">
      <title>Step #4</title>
      <para>
      In order to enable PoD's environment you need to source the <filename>PoD_env.sh</filename> script:
<screen>
<command>source PoD_env.sh</command>
</screen>
      You need to source this script every time in a new shell when you want to use <application>PoD</application>
      or source it from your bash profile.
      </para>
      <para>
      Now the installation is done.
      <important>
      	<para>
       	If there were problems during installation, please see <xref linkend="Support"/> or <xref linkend="Known_Issues"/>.
      	</para>
      </important>
      </para>
    </sect1>
  </chapter>
  
