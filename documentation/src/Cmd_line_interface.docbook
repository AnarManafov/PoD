<!-- 
 Command-line interface 
 -->
<chapter id="Cmd_line_interface">
    <title>Command-line interface</title>
    <chapterinfo>
    </chapterinfo>
    
    
    <!-- ......................................................................... -->
    <!-- pod-server -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-server">
        <refentryinfo>
            <title>pod-server</title>
            <date>2010-01-31</date>
            <productname>pod-server vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-server</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-server</refname>
            <refpurpose>Manage PoD server</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-server</command>
                <group choice="req">
                    <arg>start</arg>
                    <arg>stop</arg>
                    <arg>status</arg>
                </group>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                Using this command users can start/stop PoD server. PoD server currently includes two daemons, namely xproofd and pod-agent.
                When the <option>status</option> argument is used, <command>pod-server</command> will show running processes including their process IDs
                and used TCP ports. For user convenience the <command>pod-server</command> command with
                the <option>status</option> option prints also a PROOF connection string (master_host:xproofd_port),
                which can be used as an argument to <literal>TProof::Open</literal> in PROOF analysis scripts.
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>start</option></term>
                    <listitem>
                        <para>Start/Restart PoD server.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>stop</option></term>
                    <listitem>
                        <para>Stop PoD server.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>status</option></term>
                    <listitem>
                        <para>Request the status of PoD server. It will show which processes are running, under which PIDs and which TCP ports are used.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-info -->
    
    <!-- Usage: pod-info [-s] [-n] [-l] [-v] [-c] [-h] 
     -s : print PoD server status
     -n : print a  number of currently available PROOF workers
     -l : list all available PROOF workers
     -v : print version information
     -c : print a PROOF connection string, which can be used in TProof::Open
     -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-info">
        <refentryinfo>
            <title>pod-info</title>
            <date>2010-01-31</date>
            <productname>pod-info vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-info</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-info</refname>
            <refpurpose>Show information about PoD and PROOF workers.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-info</command>
                <group choice="opt">
                    <arg>-s</arg>
                    <arg>-n</arg>
                    <arg>-l</arg>
                    <arg>-v</arg>
                    <arg>-c</arg>
                    <arg>-h</arg>
                </group>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                One can use <command>pod-info</command> to retrieve different kinds of information about and from PoD.
                For example <command>pod-info</command> could help to find out whether PoD server running or not, how many PROOF workers already online and
                which workers is available. Please see the Options section to find out all kinds of information <command>pod-info</command> can retrieve and show.
            </para>
            <para>
                The <command>pod-info</command> utility exits 0 on success, and >0 if an error occurs.    
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-s</option></term>
                    <listitem>
                        <para>Show PoD server status.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-n</option></term>
                    <listitem>
                        <para>Report a number of currently available PROOF workers.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-l</option></term>
                    <listitem>
                        <para>List all available PROOF workers.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-v</option></term>
                    <listitem>
                        <para>Print version information.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-c</option></term>
                    <listitem>
                        <para>Show a PROOF connection string, which can be used in TProof::Open.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-h</option></term>
                    <listitem>
                        <para>Show summary of options.</para>
                    </listitem>
                </varlistentry>   
            </variablelist>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-user-defaults -->
    <!--
     "help,h",     produce help message
     "version,v"   version information
     "config,c",   PoD user-defaults configuration file
     "key",        get a value for the given key
     
     -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-user-defaults">
        <refentryinfo>
            <title>pod-user-defaults</title>
            <date>2010-01-31</date>
            <productname>pod-user-defaults vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-user-defaults</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-user-defaults</refname>
            <refpurpose>Retrieves values from PoD user defaults configuration file.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-user-defaults</command>
                <arg><option>-h, --help</option></arg>
                <arg><option>-v, --version</option></arg>
                <arg><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></arg>
                <arg><option>--key=<replaceable>name</replaceable></option></arg>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                The <command>pod-user-defaults</command> command can be used to retrieve values from the PoD user defaults configuration file for any given keys.
                The PoD user defaults configuration "<filename>PoD.cfg</filename>" is a general PoD settings file, where user can tune PoD for a specific environment.
                The file usually can be found in <filename class="directory"><envar>$POD_LOCATION</envar>/etc</filename>.
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-h, --help</option></term>
                    <listitem>
                        <para>Show summary of options.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-v, --version</option></term>
                    <listitem>
                        <para>Version information.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></term>
                    <listitem>
                        <para>PoD user-defaults configuration file.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--key=<replaceable>name</replaceable></option></term>
                    <listitem>
                        <para>The <command>pod-user-defaults</command> retrieves a value for the given key. A key must be specified with a its section name
                            (separated by a dot), for example to find out a working directory on the PoD server, request the value for the following key: "server.wrk_dir".
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-prep-worker -->
    <!-- ......................................................................... -->
    
    <refentry>
        <refentryinfo>
            <title>pod-prep-worker</title>
            <date>2010-01-31</date>
            <productname>pod-prep-worker vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-prep-worker</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-prep-worker</refname>
            <refpurpose>Prepares a worker package - all elements of PoD which need to be uploaded to a worker node.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-prep-worker</command>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                The <command>pod-prep-worker</command> command creates a tar-zipped archive of all files which are required on PoD worker. The command prepares a
                PoD worker package. This package and the <command>PoDWorker.sh</command> job script are all what is required to start a PoD worker.
            </para>
            <para>
                The <command>pod-prep-worker</command> command must be issued on the PoD server machine and only when PoD server is up an running.
                Otherwise the package will be not created.
            </para>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-submit -->
    <!-- ......................................................................... -->
    
    <refentry id="pod_submit">
        <refentryinfo>
            <title>pod-submit</title>
            <date>2010-01-31</date>
            <productname>pod-submit vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-submit</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-submit</refname>
            <refpurpose>Submit PoD jobs using a defined resource management system.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-submit</command>
                <arg><option>-h</option></arg>
                <arg><option>-l</option></arg>
                <arg><option>-r <replaceable>lsf|pbs|oge</replaceable></option></arg>
                <arg><option>-q <replaceable>queue</replaceable></option></arg>
                <arg><option>-n <replaceable>X</replaceable></option></arg>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                Use this command to manually submit PoD workers to a defined resource management system.
                The command currently supports:
                <itemizedlist>
                    <listitem><para>LSF (Load Sharing Facility),</para></listitem>
                    <listitem><para>PBS Pro/OpenPBS/Torque (Portable Batch System),</para></listitem>
                    <listitem><para>OGE (Oracle/Sun Grid Engine).</para></listitem>
                </itemizedlist>
            </para>
            <para>
            Use <command>pod-submit <option>-l</option></command> to find out the 
            list of avaliable and supported CLI plug-ins.
            <note><para>
                The pod-submit can't be used to submit SSH jobs.
                In order to use PoD SSH plug-in, please check the
                <xref linkend="pod-ssh"/> reference manual.
            </para></note>
            </para>
            <para>
                The <command>pod-submit</command> utility exits 0 on success, and >0 if an error occurs.    
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-h</option></term>
                    <listitem>
                        <para>Show summary of options and exit.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-l</option></term>
                    <listitem>
                        <para>Show all available RMS plug-ins.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-r <replaceable>lsf|pbs|oge</replaceable></option></term>
                    <listitem>
                        <para>A name of the resource management system to use (supported: lsf, pbs, oge).</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-q <replaceable>queue</replaceable></option></term>
                    <listitem>
                        <para>Submit the jobs to specified <option>queue</option>.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-n <replaceable>X</replaceable></option></term>
                    <listitem>
                        <para>Specify a desired number or PROOF workers, where the <option>X</option> option defines the number of workers.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-ssh -->
    <!--
     "help,h",     Produce help message
     "version,v"   Version information
     "config,c",   PoD's ssh plug-in configuration file. A workers description file
     "submit",     Submit workers
     "clean",      Clean all workers
     "status",     Request status of the workers
     -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-ssh">
        <refentryinfo>
            <title>pod-ssh</title>
            <date>2010-09-08</date>
            <productname>pod-ssh vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-ssh</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-ssh</refname>
            <refpurpose>Submits/Cleans PoD workers using an ssh connection.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-ssh</command>
                <arg><option>-h, --help</option></arg>
                <arg><option>-v, --version</option></arg>
                <arg><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></arg>
                <group choice="req">
                    <arg>--submit</arg>
                    <arg>--clean</arg>
                    <arg>--status</arg>
                </group>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                The <command>pod-ssh</command> command can be used to submit and clean PoD workers using an ssh connection.
            </para>
            <important><para>
                The current implementation requires users to have a public key access (password less) to destination remote hosts (worker nodes).
            </para></important>
            <para>
                The <command>pod-ssh</command> command takes PoD's ssh plug-in configuration file as input.
                The configuration file is a comma-separated values (CSV) file.
                Fields are normally separated by commas. If you want to put a comma in a field, you need to put quotes around it. Also 3 escape sequences are supported.
            </para>
            <para>
                <table id="POD_SSH_CFG_TABLE">
                    <title>PoD's ssh plug-in configuration fields</title>
                    <tgroup cols="1">
                        <thead>
                            <row>
                                <entry>1</entry>
                                <entry>2</entry>
                                <entry>3</entry>
                                <entry>4</entry>
                                <entry>5</entry>
                            </row>      
                        </thead>
                        <tbody>		
                            <row>
                                <entry>id (must be a unique string)</entry>
                                <entry>a host name with or without a login, in a form: login@host.fqdn</entry>
                                <entry>additional ssh params (could be empty)</entry>
                                <entry>remote working dir</entry>
                                <entry>number of workers</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                
                An example of a configuration file:
<screen>
r1, anar@lxg0527.gsi.de, -p24, /tmp/test, 4
# this is a comment
r2, user@lxi001.gsi.de,,/home/user/pod,16
125, user2@host, , /tmp/test,8
</screen>
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-h, --help</option></term>
                    <listitem>
                        <para>Show summary of options.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-v, --version</option></term>
                    <listitem>
                        <para>Version information.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></term>
                    <listitem>
                        <para>PoD's ssh plug-in configuration file. A workers description file.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--submit</option></term>
                    <listitem>
                        <para>Submit PoD workers according to the entries in the configuration file.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--clean</option></term>
                    <listitem>
                        <para>Clean all PoD workers according to the entries in the configuration file.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--status</option></term>
                    <listitem>
                        <para>Request status of PoD workers listed in the configuration file.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
    </refentry>
    
</chapter>

