<!-- 
Introduction 
-->
	<chapter id="Introduction">
		<title>Introduction</title>
		<chapterinfo>
   	</chapterinfo>
   	<sect1 id="PROOF-on-Demand">
      <title>PROOF on Demand</title>
    	<para>
    	<application>PROOF on Demand (PoD)</application> â€“ a specially designed solution to provide a PROOF cluster on demand.
    	It is developed at GSI (Darmstadt, Germany) in terms of a D-Grid project and aims to implement a PROOF distributed
    	data analysis on Grid and batch clusters.
    	</para>
    	<para>
    	<application>PoD</application> provides a plug-in system, which helps to use it with different job submission machineries.
    	Current implementation of PoD ships a gLite plug-in (for gLite Grid) and LSF plug-in (for LSF batch system). 
    	The gLite plug-in uses <ulink url="https://subversion.gsi.de/trac/dgrid/wiki/GAW">glite-api-wrapper library</ulink>
    	(<acronym>GAW</acronym>) to perform gLite job submission and other Grid-related procedures.
    	</para>
    	<para>
		<itemizedlist>
			<title><application>PoD</application> consists of the following main components:</title>
  			<listitem>
    			<para>
    			<guilabel>pod-agent</guilabel> &mdash; a lightweight, standalone C++ application.
    			Acts as a multifunctional proxy client/server and helps to use proof/xrootd on remote
			worker nodes behind a firewall. Also pod-agent has a number of additional
    			useful functionality which help to start, process, and control PROOF interactive analysis.
    			Its default configuration file is provided with the PoDs distribution.
    			</para>
  			</listitem>
  		  	<listitem>
    			<para>
                <guilabel>pod-console</guilabel> &mdash; a standalone C++ application, provides a GUI and aims
                to simplify the usage of PoD modules and PoD configuration files.
                pod-console implements a plug-in system, which helps to have different job managers and
                submit workers to a different Grid or batch systems.
                Currently PoD provides gLite and LSF plug-ins.
    			</para>
  			</listitem>
  			<listitem>
    			<para>
    			<guilabel>PoDWorker.sh</guilabel> &mdash; a generic job script executed on remote machines.  
    			</para>
  			</listitem>
			<listitem>
    			<para>
    			<guilabel>PoD utilities</guilabel> &mdash; this is a default job script for plug-ins, configuration files and helper utilities.  
    			</para>
			</listitem>
		</itemizedlist>
		</para>
		<para>
		<figure id="fig_PoD" float="0">
			<title>A generic schema of PoD</title>
			<screenshot><mediaobject>
			<imageobject>
			<imagedata fileref="PoD_Components.png" format="PNG"/>
			</imageobject>
			<textobject>
			<phrase>phrase</phrase>
			</textobject>
			</mediaobject></screenshot>
		</figure>
		</para>
		</sect1>
		<sect1 id="use_case">
      <title>Use case</title>
		<para>
		The following describes one of the main use case of PoD (see <xref linkend="fig_PoD"/>):
		<orderedlist>
  		<title>Set up a PROOF cluster on the Grid</title>
  			<listitem>
    			<para>Using pod-console a user configures and starts pod-agent (PA)
    			server and XROOTD redirector - all together it is a PoD server .</para>
  			</listitem>
  			<listitem>
    			<para>PA connects to XROOTD's proof port and waits for PA clients.</para>
			</listitem>
			<listitem>
				<para>Using pod-console the user submits PoD parametric job to the Grid.</para>
			</listitem>
			<listitem>
				<para>When the job arrives to a remote worker node it configures the environment
				and starts all needed services including XROOTD worker and PA client.</para>
			</listitem>
			<listitem>
				<para>Then PA client communicates with PA server, exchanges environment data and
				initiates a network tunnel.</para>
			</listitem>
			<listitem>
				<para>When PA server accepts a client connection, the client is ready to be a PROOF
				worker node.</para>
			</listitem>
			<listitem>
				<para>When PA server detects good connections with its clients, this information is
				immediately reflected by pod-console.</para>
			</listitem>
			<listitem>
				<para>When all workers are connected or when the user is satisfied with the number of
				connected workers, the PROOF analysis can be processed like on a local batch farm.</para>
			</listitem>
			<listitem>
				<para>PA can manage disconnects, the user can restart the ROOT session without resubmitting
				PoD Grid jobs.</para>
			</listitem>
			</orderedlist>
		</para>
		</sect1>
	</chapter>
