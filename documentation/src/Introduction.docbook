<!-- 
Introduction 
-->
	<chapter id="Introduction">
		<title>Introduction</title>
		<chapterinfo>
   	</chapterinfo>
   	<sect1 id="PROOF-on-Demand"><title>PROOF on Demand</title>
      <para>
      <emphasis role="bold">PROOF on Demand (PoD)</emphasis> is a set of utilities (<xref linkend="fig_PoD"/>) developed at <ulink url="http://www.gsi.de">GSI</ulink>, which allows starting a
      <ulink url="http://root.cern.ch/drupal/category/package-context/proof">PROOF</ulink> cluster at user request,
      on any resource management system. Installation is simple and doesn't require administrator privileges, and all the
      processes run in user space. PoD gives users, who don't have a centrally-administrated static PROOF cluster at their
      institute, the possibility to enjoy the full power of interactive analysis with PROOF.
      </para>
      <para>
        PoD is a specially designed solution to provide a PROOF cluster on the fly.
      </para>

      		<para>
		<figure id="fig_PoD" float="0">
			<title>A generic schema of PoD</title>
			<screenshot><mediaobject>
			<imageobject>
			<imagedata fileref="PoD_Components.png" format="PNG"/>
			</imageobject>
			<textobject>
			<phrase>phrase</phrase>
			</textobject>
			</mediaobject></screenshot>
		</figure>
		</para>
      </sect1>

<sect1 id="POD_Features"><title>Features</title>
<itemizedlist>
<listitem><para><emphasis role="bold">Easy to use</emphasis></para>
<para>
The process of installation is very simple and fully automated.
PoD works out of the box. Its distribution contains preconfigured modules and everything users need to
just immediately start to work with it right after the installation.
</para>
</listitem>

<listitem><para><emphasis role="bold">GUI &amp; Command-line</emphasis></para>
<para>
PoD provides a simple and intuitive graphics user interface in order to simplify access to its functionality.
For user’s convenience there is also a command line interface, it helps to manage a PoD cluster remotely or use it in a batch mode.
</para>
</listitem>

<listitem><para><emphasis role="bold">Native PROOF connections</emphasis></para>
<para>
Whenever possible, PoD setups direct PROOF connections between nodes. It results in a full functional PROOF cluster.
Users get native speed and the whole range of PROOF features. To use native connections an incoming traffic must be allowed
on PoD workers for a defined port. Otherwise PoD uses packet-forwarding algorithms.
</para>
</listitem>

<listitem><para><emphasis role="bold">Packet-forwarding</emphasis></para>
<para>
When worker nodes are behind a firewall then PoD uses its packet-forwarding algorithms to maintain the PROOF traffic.
The algorithms are very efficient, there will be no speed penalty, but some PROOF functions are limited.
</para>
</listitem>

<listitem><para><emphasis role="bold">Multiuser/-core environment</emphasis></para>
<para>
PoD implements automatic port mapping algorithms to properly handle cases when several users start PoD instances
(servers/ workers) on the same machine. PoD also automatically manages situations when multiple PoD workers are started on the same node.
Private PoD instances can’t disturb each other.
</para>
</listitem>

<listitem><para><emphasis role="bold">Different job managers</emphasis></para>
<para>
PoD supports different job managers via a plug-in system. It is a very easy to extend system.
PoD currently supports gLite, LSF and PBS.</para>
</listitem>


</itemizedlist>
</sect1>

    <sect1 id="use_case"><title>Use case</title>
		<para>
		The following describes one of the main use case of PoD:
		<orderedlist>
  		<title>Set up a PROOF cluster on the Grid</title>
  			<listitem>
    			<para>Using pod-console a user configures and starts pod-agent (PA)
    			server and XROOTD redirector - all together it is a PoD server .</para>
  			</listitem>
  			<listitem>
    			<para>PA connects to XROOTD's proof port and waits for PA clients.</para>
			</listitem>
			<listitem>
				<para>Using pod-console the user submits PoD parametric job to the Grid.</para>
			</listitem>
			<listitem>
				<para>When the job arrives to a remote worker node it configures the environment
				and starts all needed services including XROOTD worker and PA client.</para>
			</listitem>
			<listitem>
				<para>Then PA client communicates with PA server, exchanges environment data and
				initiates a network tunnel.</para>
			</listitem>
			<listitem>
				<para>When PA server accepts a client connection, the client is ready to be a PROOF
				worker node.</para>
			</listitem>
			<listitem>
				<para>When PA server detects good connections with its clients, this information is
				immediately reflected by pod-console.</para>
			</listitem>
			<listitem>
				<para>When all workers are connected or when the user is satisfied with the number of
				connected workers, the PROOF analysis can be processed like on a local batch farm.</para>
			</listitem>
			<listitem>
				<para>PA can manage disconnects, the user can restart the ROOT session without resubmitting
				PoD Grid jobs.</para>
			</listitem>
			</orderedlist>
		</para>
		</sect1>
	</chapter>
