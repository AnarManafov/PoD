<!-- 
 Command-line interface 
 -->
<chapter id="Cmd_line_interface">
    <title>Command-line interface</title>
    <chapterinfo>
    </chapterinfo>
    
    
    <!-- ......................................................................... -->
    <!-- pod-server -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-server">
        <refentryinfo>
            <title>pod-server</title>
            <date>2010-01-31</date>
            <productname>pod-server vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-server</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-server</refname>
            <refpurpose>Manage PoD server</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-server</command>
                <group choice="req">
                    <arg>start</arg>
                    <arg>restart</arg>
                    <arg>stop</arg>
                    <arg>status</arg>
                    <arg>getbins</arg>
                </group>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                Using this command users can start/stop PoD server. PoD server currently includes two daemons, namely xproofd and pod-agent.
                When the <option>status</option> argument is used, <command>pod-server</command> will show running processes including their process IDs
                and used TCP ports. For user convenience the <command>pod-server</command> command with
                the <option>status</option> option prints also a PROOF connection string (master_host:xproofd_port),
                which can be used as an argument to <literal>TProof::Open</literal> in PROOF analysis scripts.
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>start</option></term>
                    <listitem>
                        <para>Start PoD server.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>restart</option></term>
                    <listitem>
                        <para>Restart PoD server.</para>
                    </listitem>
                </varlistentry>                
                <varlistentry>
                    <term><option>stop</option></term>
                    <listitem>
                        <para>Stop PoD server.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>status</option></term>
                    <listitem>
                        <para>Request the status of PoD server. It will show which processes are running, under which PIDs and which TCP ports are used.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>getbins</option></term>
                    <listitem>
                        <para>Force PoD server to download workers pre-compiled binaries from the PoD repository.
                            The binaries than saved to <filename class="directory">$POD_LOCATION/bin/wn_bins</filename> directory.
                        </para>
                    </listitem>
                </varlistentry>                
            </variablelist>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-info -->
    
    <!--  
      h [ help ]               Produce help message
      v [ version ]            Version information.
      d [ debug ]              Show debug messages.
      c [ connection_string ]  Show PROOF connection string.
      l [ list ]               List all available PROOF workers.
      n [ number ]             Report a number of currently available PROOF 
                                  workers.
      s [ status ]             Show status of PoD server.
      ssh arg                   An SSH connection string. Directs pod-info to use
                                  SSH to detect a remote PoD server.
      ssh_opt arg               Additional options, which will be used in SSH 
                                  commands.
      ssh_open_domain arg       The name of a third party machine open to the 
                                  outside world and from which direct connections 
            :if expand("%") == ""|browse confirm w|else|confirm w|endif
                      to the server are possible.
      b [ batch ]              Enable the batch mode.
     -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-info">
        <refentryinfo>
            <title>pod-info</title>
            <date>2011-01-25</date>
            <productname>pod-info vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-info</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-info</refname>
            <refpurpose>Show information about PoD and PROOF workers.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-info</command>
                <group choice="opt">
                    <arg><option>-h, --help</option></arg>
                    <arg><option>-v, --version</option></arg>
                    <arg><option>-d, --debug</option></arg>
                    <arg><option>-b, --batch</option></arg>
                    <arg><option>-c, --connection_string</option></arg>
                    <arg><option>-l, --list</option></arg>
                    <arg><option>-n, --number</option></arg>
                    <arg><option>-s, --status</option></arg>
		 <group choice="opt_ssh">
                    <arg><option>--remote <replaceable>arg</replaceable></option></arg>
                    <arg><option>--remote_path <replaceable>arg</replaceable></option></arg> 
		    <arg><option>--ssh_opt <replaceable>arg</replaceable></option></arg>
                    <arg><option>--ssh_open_domain <replaceable>arg</replaceable></option></arg>
                 </group>
                </group>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                One can use <command>pod-info</command> to retrieve different kinds of information about and from PoD.
                For example <command>pod-info</command> could help to find out whether PoD server running or not, how many PROOF workers are already online and
                which exactly. Please see <xref linkend="pod-info_options"/> to find out all kinds of information <command>pod-info</command> can retrieve and show.
            </para>
            <para>
            By default <command>pod-info</command> tries to find and connect to a local PoD server.
            A PoD server considered to be a local one if the <command>pod-info</command> and the PoD server run under the same user id.
            It could be the same machine or different machines but with a shared home file system.
            </para>
	    <para>
            When you want to retrieve information about a remote PoD server, than you need to use the <option>--remote</option> option.
            Using this option you can specify an ssh connection string, where a remote PoD server is running.
            The <command>pod-info</command> command will first try to find the running PoD server on that host and than process user requests
            on that server.
            In <xref linkend="pod-info_examples"/> you will find some use cases.
            </para>
            <para>
                The <command>pod-info</command> utility exits 0 on success, and >0 if an error occurs.    
            </para>
        </refsect1>
        <refsect1 id="pod-info_options">
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-h, --help</option></term>
                    <listitem>
                        <para>Show summary of options.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-v, --version</option></term>
                    <listitem>
                        <para>Print version information.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-d, --debug</option></term>
                    <listitem>
                        <para>Show debug messages. This option enables a debug mode and helps in some cases to understand what is going wrong.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-b, --batch</option></term>
                    <listitem>
                        <para>Enable the batch mode. For example, in case when the <option>--remote</option> option also used, than there will
                         be no password prompts or any interaction with a user. The utility will try to use SSH public key authentication and will fail if it's not working.</para>
                        <para>
                         The batch mode is very useful, when <command>pod-info</command> is used in a ROOT/PROOF script to retrieve a connection string
                         (see <xref linkend="pod-info_connection_string"/>).
                         In this case you want <command>pod-info</command> to return either a PROOF connection string or an empty string
                         in case of an error and no prompts of any kind.
		        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-c, --connection_string</option></term>
                    <listitem>
                        <para>Show a PROOF connection string, which could be passed to the TProof::Open method as an argument.</para>
                    </listitem>
                </varlistentry> 
                <varlistentry>
                    <term><option>-l, --list</option></term>
                    <listitem>
                        <para>List all available PROOF workers.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-n, --number</option></term>
                    <listitem>
                        <para>Report a number of currently available PROOF workers.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-s, --status</option></term>
                    <listitem>
                        <para>Show PoD server status.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--remote <replaceable>arg</replaceable></option></term>
                    <listitem>
                        <para>An connection string in form of user@host.fqdn. Directs <command>pod-info</command> to use SSH to detect and connect to a remote PoD server.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--remote_path <replaceable>arg</replaceable></option></term>
                    <listitem>
                        <para>A working directory of the remote PoD server. It is very important either to write an explicit
                              path or use quotes, so that shell will not substitute local variable in the remote path. (default: ~/.PoD/)</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--ssh_opt <replaceable>arg</replaceable></option></term>
                    <listitem>
                        <para>If needed, users can provide additional SSH options,
                              which will be used by <command>pod-info</command> in all SSH communications.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--ssh_open_domain <replaceable>arg</replaceable></option></term>
                    <listitem>
                        <note><para>
                             The <option>--ssh_open_domain</option> is in development. So far <command>pod-info</command> can only work with remote PoD servers
                             which are at least directly accessible via SSH.
                        </para></note>
                        <para> The name of a third party machine open to the outside world and from which direct
                               connections to the server are possible.
                               The optional argument, can be used when PoD server machine is not directly accessible from outside via SSH.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
        <refsect1 id="pod-info_examples"><title>Examples</title>

<example><title>PoD version information</title>
<para>
<screen>
<command>pod-info <replaceable>-v</replaceable></command>
</screen>
           Get PoD version from a remote PoD server on the machine <replaceable>server.fqdn</replaceable>
           (it could be also on a shared home file system there):
<screen>
<command>pod-info <option>--remote <replaceable>user@server.fqdn</replaceable></option> <option>-v</option></command>
</screen>
	   </para>
</example>

<example><title>available PROOF workers</title>
<para>
a number of workers:
<screen>
<command>pod-info <option>-n</option></command>
</screen>
the same from the remote PoD server:
<screen>
<command>pod-info <option>--remote <replaceable>user@server.fqdn</replaceable></option> <option>-n</option></command>
</screen>
a list of workers:
<screen>
<command>pod-info <option>-l</option></command>
</screen>
or all together:
<screen>
<command>pod-info <option>-nl</option></command>
</screen>
</para>
</example>


<example id="pod-info_connection_string"><title>PROOF connection string</title>
<para>
<screen>
<command>pod-info <option>-c</option></command>
</screen>
the same from the remote PoD server:
<screen>
<command>pod-info <option>--remote <replaceable>user@server.fqdn</replaceable></option> <option>-c</option></command>
</screen>
or if the remote server has a non-default working folder:
<screen>
<command>pod-info <option>--remote <replaceable>user@server.fqdn</replaceable></option> <option>--remote_path <replaceable>"~/pod/work_dir/"</replaceable></option> <option>-c</option></command>
</screen>


use this command in a ROOT script or your analysis code directly:
<programlisting>
TProof::Open(gSystem->GetFromPipe(""<command>pod-info <option>-c</option></command>"));
</programlisting>

with a remote PoD server:
<programlisting>
TProof::Open(gSystem->GetFromPipe("<command>pod-info <option>--remote <replaceable>user@server.fqdn</replaceable></option> <option>-c</option> <option>-b</option></command>"));
</programlisting>
note, that we use the <option>-b</option> option, because we can't have any prompt in out ROOT script and
therefore the call to <command>pod-info</command> must be silent. Since it will return an empty string in case of failure, users may want to check:
<programlisting>
std::string url(gSystem->GetFromPipe("<command>pod-info <option>--remote <replaceable>user@server.fqdn</replaceable></option> <option>-c</option> <option>-b</option></command>"));
if( url.empty() )
{
   // PoD server is not running
   // print out an error message...
   return 1;
}
TProof::Open( url.c_str() );
</programlisting>
</para>
</example>

<example><title>PoD server status</title>
<para>
<screen>
<command>pod-info <option>-s</option></command>
</screen>
the same from the remote PoD server:
<screen>
<command>pod-info <option>--remote <replaceable>user@server.fqdn</replaceable></option> <option>-s</option></command>
</screen>
</para>
</example>
        </refsect1>

    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-user-defaults -->
    <!--
     "help,h",     produce help message
     "version,v"   version information
     "config,c",   PoD user-defaults configuration file
     "key",        get a value for the given key
     
     -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-user-defaults">
        <refentryinfo>
            <title>pod-user-defaults</title>
            <date>2010-01-31</date>
            <productname>pod-user-defaults vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-user-defaults</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-user-defaults</refname>
            <refpurpose>Retrieves values from PoD user defaults configuration file.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-user-defaults</command>
                <arg><option>-h, --help</option></arg>
                <arg><option>-v, --version</option></arg>
                <arg><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></arg>
                <arg><option>--key=<replaceable>name</replaceable></option></arg>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                The <command>pod-user-defaults</command> command can be used to retrieve values from the PoD user defaults configuration file for any given keys.
                The PoD user defaults configuration "<filename>PoD.cfg</filename>" is a general PoD settings file, where user can tune PoD for a specific environment.
                The file usually can be found in <filename class="directory"><envar>$HOME</envar>/.PoD/etc</filename> or in <filename class="directory"><envar>$POD_LOCATION</envar>/etc</filename>.
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-h, --help</option></term>
                    <listitem>
                        <para>Show summary of options.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-v, --version</option></term>
                    <listitem>
                        <para>Version information.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></term>
                    <listitem>
                        <para>PoD user-defaults configuration file.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--key=<replaceable>name</replaceable></option></term>
                    <listitem>
                        <para>The <command>pod-user-defaults</command> retrieves a value for the given key. A key must be specified with a its section name
                            (separated by a dot), for example to find out a working directory on the PoD server, request the value for the following key: "server.wrk_dir".
                        </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-prep-worker -->
    <!-- ......................................................................... -->
    
    <refentry>
        <refentryinfo>
            <title>pod-prep-worker</title>
            <date>2010-01-31</date>
            <productname>pod-prep-worker vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-prep-worker</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-prep-worker</refname>
            <refpurpose>Prepares a worker package - all elements of PoD which need to be uploaded to a worker node.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-prep-worker</command>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                The <command>pod-prep-worker</command> command creates a tar-zipped archive of all files which are required on PoD worker. The command prepares a
                PoD worker package. This package and the <command>PoDWorker.sh</command> job script are all what is required to start a PoD worker.
            </para>
            <para>
                The <command>pod-prep-worker</command> command must be issued on the PoD server machine and only when PoD server is up an running.
                Otherwise the package will be not created.
            </para>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-submit -->
    <!-- ......................................................................... -->
    
    <refentry id="pod_submit">
        <refentryinfo>
            <title>pod-submit</title>
            <date>2010-01-31</date>
            <productname>pod-submit vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-submit</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-submit</refname>
            <refpurpose>Submit PoD jobs using a defined resource management system.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-submit</command>
                <arg><option>-h</option></arg>
                <arg><option>-l</option></arg>
                <arg><option>-r <replaceable>lsf|pbs|ge|condor</replaceable></option></arg>
                <arg><option>-q <replaceable>queue</replaceable></option></arg>
                <arg><option>-n <replaceable>X</replaceable></option></arg>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                Use this command to manually submit PoD workers to a defined resource management system.
                The command currently supports:
                <itemizedlist>
                    <listitem><para>LSF (Load Sharing Facility),</para></listitem>
                    <listitem><para>PBS Pro/OpenPBS/Torque (Portable Batch System),</para></listitem>
                    <listitem><para>Grid Engine (Oracle/Sun Grid Engine),</para></listitem>
                    <listitem><para>Condor.</para></listitem>                    
                </itemizedlist>
            </para>
            <para>
            Use <command>pod-submit <option>-l</option></command> to find out the 
            list of avaliable and supported CLI plug-ins.
            <note><para>
                The pod-submit can't be used to submit SSH jobs.
                In order to use PoD SSH plug-in, please check the
                <xref linkend="pod-ssh"/> reference manual.
            </para></note>
            </para>
            <para>
                The <command>pod-submit</command> utility exits 0 on success, and >0 if an error occurs.    
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-h</option></term>
                    <listitem>
                        <para>Show summary of options and exit.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-l</option></term>
                    <listitem>
                        <para>Show all available RMS plug-ins.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-r <replaceable>lsf|pbs|ge|condor</replaceable></option></term>
                    <listitem>
                        <para>A name of the resource management system to use (supported: lsf, pbs, ge, condor).</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-q <replaceable>queue</replaceable></option></term>
                    <listitem>
                        <para>Submit the jobs to specified <option>queue</option>.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-n <replaceable>X</replaceable></option></term>
                    <listitem>
                        <para>Specify a desired number or PROOF workers, where the <option>X</option> option defines the number of workers.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
    </refentry>
    
    <!-- ......................................................................... -->
    <!-- pod-ssh -->
    <!--
     "help,h",     Produce help message
     "version,v"   Version information
     "config,c",   PoD's ssh plug-in configuration file. A workers description file
     "submit",     Submit workers
     "clean",      Clean all workers
     "status",     Request status of the workers
     -->
    <!-- ......................................................................... -->
    
    <refentry id="pod-ssh">
        <refentryinfo>
            <title>pod-ssh</title>
            <date>2010-09-08</date>
            <productname>pod-ssh vXXX</productname>
        </refentryinfo>
        <refmeta>
            <refentrytitle>pod-ssh</refentrytitle>
            <manvolnum>1</manvolnum>
        </refmeta>
        <refnamediv>
            <refname>pod-ssh</refname>
            <refpurpose>Submits/Cleans PoD workers using an ssh connection.</refpurpose>
        </refnamediv>
        <refsynopsisdiv>
            <cmdsynopsis>
                <command>pod-ssh</command>
                <arg><option>-h, --help</option></arg>
                <arg><option>-v, --version</option></arg>
                <arg><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></arg>
                <group choice="req">
                    <arg>--submit</arg>
                    <arg>--clean</arg>
                    <arg>--status</arg>
                </group>
            </cmdsynopsis>
        </refsynopsisdiv>
        <refsect1>
            <title>Description</title>
            <para>
                The <command>pod-ssh</command> command can be used to submit and clean PoD workers using an ssh connection.
            </para>
            <important><para>
                The current implementation requires users to have a public key access (password less) to destination remote hosts (worker nodes).
            </para></important>
            <para>
                The <command>pod-ssh</command> command takes PoD's ssh plug-in configuration file as input.
                The configuration file is a comma-separated values (CSV) file.
                Fields are normally separated by commas. If you want to put a comma in a field, you need to put quotes around it. Also 3 escape sequences are supported.
            </para>
            <para>
                <table id="POD_SSH_CFG_TABLE">
                    <title>PoD's ssh plug-in configuration fields</title>
                    <tgroup cols="5">
                        <thead>
                            <row>
                                <entry>1</entry>
                                <entry>2</entry>
                                <entry>3</entry>
                                <entry>4</entry>
                                <entry>5</entry>
                            </row>      
                        </thead>
                        <tbody>		
                            <row>
                                <entry>id (must be a unique string)</entry>
                                <entry>a host name with or without a login, in a form: login@host.fqdn</entry>
                                <entry>additional ssh params (could be empty)</entry>
                                <entry>remote working dir</entry>
                                <entry>number of workers</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                
                An example of a configuration file:
<screen>
r1, anar@lxg0527.gsi.de, -p24, /tmp/test, 4
# this is a comment
r2, user@lxi001.gsi.de,,/home/user/pod,16
125, user2@host, , /tmp/test,8
</screen>
            </para>
        </refsect1>
        <refsect1>
            <title>Options</title>
            <variablelist>
                <varlistentry>
                    <term><option>-h, --help</option></term>
                    <listitem>
                        <para>Show summary of options.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-v, --version</option></term>
                    <listitem>
                        <para>Version information.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>-c <replaceable>file</replaceable>, --config=<replaceable>file</replaceable></option></term>
                    <listitem>
                        <para>PoD's ssh plug-in configuration file. A workers description file.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--submit</option></term>
                    <listitem>
                        <para>Submit PoD workers according to the entries in the configuration file.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--clean</option></term>
                    <listitem>
                        <para>
                            Clean all PoD workers according to the entries in the configuration file.
                            This command also delivers all log files from the worker nodes. Logs are copied to
                            PoD log directory, the path to which is configurable via PoD user defaults.
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><option>--status</option></term>
                    <listitem>
                        <para>Request status of PoD workers listed in the configuration file.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect1>
    </refentry>
    
</chapter>

