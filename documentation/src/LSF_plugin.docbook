<!--
LSF plug-in description
-->
  <chapter id="LSF_plugin">
    <title>LSF plug-in</title>
        <chapterinfo>
       </chapterinfo>
           
    <sect1 id="LSF_Workers">
      <title>LSF workers</title>
      <sect2><title>GUI</title>
      <para>
      The <xref linkend="PAConsole_LSF_plug-in"/> shows a screen shot of the LSF plug-in GUI page for pod-console.
      </para>
      <para><figure float="0" id="PAConsole_LSF_plug-in">
        <title>pod-console: LSF job manager</title>
        <screenshot><mediaobject>
        <imageobject>
        <imagedata fileref="PAConsole_LSF_plugin_snapshot.png" format="PNG"/>
        </imageobject>
        <textobject>
        <phrase></phrase>
        </textobject>
        </mediaobject></screenshot>
        </figure>
      </para>

      <para>
       Using the plug-ins GUI (see. <xref linkend="PAConsole_LSF_plug-in"/>) users are able to specify a number of workers and an LSF queue.
       PoD provides a default LSF job script. Advanced users a free to change it in order to tune PoD for a specific environment or tasks.
      </para>
    </sect2>

    <sect2 id="LSF_CLI"><title>CLI</title>
    <para>
    For users convenience PoD provides a command line interface. One can also use PoD CLI to submit PoD jobs, instead of using GUI.
    Meet the CLI documentation and check out the <xref linkend="pod_submit"/> reference for further information.
    </para>
    <para>
    The following simple example illustrates a submission of 15 workers to an LSF farm using the "proof" queue.
<screen>
<command>pod-submit <parameter class='command'>-r</parameter> lsf <parameter class='command'>-q</parameter> proof <parameter class='command'>-n</parameter> 15</command>
</screen>
    </para>
    </sect2>
    </sect1>
    <sect1 id="LSF_CFG"><title>Configuration</title>
    <para>
    There are LSF plug-in options in the PoD user defaults (see <xref linkend="LSF_CFG_TABLE"/>), which you can use to tune the plug-in.
    </para>
    </sect1>

  </chapter>
 
