<!--
 How to run
 -->
<chapter id="QuickStart">
    <title>Quick Start</title>
    <chapterinfo>
    </chapterinfo>
    
    <para>
        <orderedlist id="PoD Quick Start">
            <title>PoD Quick Start: </title>
            <listitem>Initialize PoD environment: <xref linkend="Environment"/></listitem>
            <listitem>Start PoD server: <xref linkend="Server"/></listitem>
            <listitem>Submit PoD workers to start dynamic PROOF cluster: <xref linkend="JobManager"/></listitem>
            <listitem>Check status of dynamic PROOF cluster: <xref linkend="PROOF_workers"/></listitem>		
            <listitem>Use the PROOF cluster for an analysis: <xref linkend="Analysis"/></listitem>
            <listitem>Restart PoD workers (if cluster needs to be reloaded): <xref linkend="JobManager"/></listitem>
            <listitem>Stop PoD server: <xref linkend="How_to_shut_down_PoD"/></listitem>
        </orderedlist>
    </para>
    
    <para>
        The following is the example to illustrate the Quick Start. We use PoD with SSH plug-in (<xref linkend="SSH_plugin"/>) to setup our PROOF cluster on the bunch of the machines, which
        are described in the <filename>pod_ssh.cfg</filename> configuration file. In the example we will use only CLI. Note, that PoD also provides GUI.
    </para>
    <para>
        Detailed descriptions of the commands and of the configuration file can be found in the <xref linkend="Cmd_line_interface"/>.
    </para>

    <para>
        PoD Environment:
<screen>
<command>cd <replaceable>[POD INSTALLATION]</replaceable></command>
<command>source PoD_env.sh</command>
</screen>
    </para>
    
    <important><para>
        The current implementation of the SSH plug-in requires users to have a public key access (or password less) to destination remote hosts (worker nodes).
    </para></important>
    
    <para>
        Starting the cluster:
<screen>
<command>pod-server <parameter class='command'>start</parameter></command>
<command>pod-server <parameter class='command'>status</parameter></command>
<command>pod-ssh <parameter class='command'>-c</parameter> pod_ssh.cfg <parameter class='command'>--submit</parameter></command>
<command>pod-ssh <parameter class='command'>--status</parameter></command>
<command>pod-info <parameter class='command'>-n</parameter></command>
<command>pod-info <parameter class='command'>-l</parameter></command>
</screen>
        The Dynamic PROOF cluster is ready to perform user's analysis code...
    </para>
    
    <important><title>Remote Environment</title><para>
        With SSH plug-in it is very often the case, that PoD can't start workers, because xproofd/ROOT is not in the PATH on worker nodes.
        If your PoD job fails, just after submission it shows DONE status.
        You may want to check the remote log files see <xref linkend="pod-ssh_examples"/>
        from the worker nodes and if it says that there are problems to start xproofd, then you need to customize environment on WNs.
        This could happen since with a batch SSH login in some systems you don't get your /etc/profile script called
        (login script) and there is no environment variables, like for normal login users. To solve this issue, users either can
        specify the full path to desired ROOT version on the worker nodes in the <filename>PoD.cfg</filename>
        or just use <xref linkend="users_env_script"/>. The last one is very much advisable.
    </para></important>
    
    <para>
        If needed we can restart it:
<screen>
<command>pod-ssh <parameter class='command'>--clean</parameter></command>
<command>pod-ssh <parameter class='command'>--submit</parameter></command>
<command>pod-ssh <parameter class='command'>--status</parameter></command>
<command>pod-info <parameter class='command'>-n</parameter></command>
</screen>
    </para>
    
    <para>
        And finally, lets shut down out PoD(PROOF) cluster:
<screen>
<command>pod-server <parameter class='command'>stop</parameter></command>
<command>pod-ssh <parameter class='command'>--clean</parameter></command>
<command>pod-ssh <parameter class='command'>--status</parameter></command>
</screen>
    </para>
    
</chapter>
