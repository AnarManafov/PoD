<!--
 Configuration
 -->
<chapter id="Configuration"><title>Configuration</title>
    <chapterinfo>
    </chapterinfo>
    <para>
        As it was mentioned above <application>PoD</application> consists of several modules, each module respects PoD user defaults settings.
        PoD is shipped with predefined configuration values, which should work in most use cases.
        However by changing PoD user defaults values, you can fine-tune <application>PoD</application> for a specific environment and needs.
        Recommended only for advanced users.
    </para>
    
    
    <sect1 id="PoD_CFG" xreflabel="PoD user defaults configuration"><title>PoD user defaults configuration</title>
        <para>
            Since PoD v2.1.1 a user defaults configuration file is supported. This is the configuration entry point of PoD.
            All modules configure themselves according to that file. It must be located either in the <filename class="directory">$HOME/.PoD/</filename> directory
            on in the <filename  class="directory">$POD_LOCATION/etc/</filename> directory and be called <filename>PoD.cfg</filename>.
        </para>
        <tip><para>
            Every time users sources PoD's environment script, the script checks whether the configuration file is exists and creates it if it's missing.
            Also the <xref linkend="pod-user-defaults"/> command can be used to create the default configuration file.
        </para></tip>
        <para>
            The <filename>PoD.cfg</filename> is a simple INI-like configuration file. Configuration file syntax is line based:
            <itemizedlist>
                <listitem><para>A line in the form:
<screen>
key_name=value
</screen>
                    gives a value to an option.
                </para></listitem>
                <listitem><para>A line in the form:
<screen>
[section name]
</screen>
                    introduces a new section in the configuration file.
                </para></listitem>
                <listitem>
                    <para>The # character introduces a comment that spans until the end of the line.</para>
                    <para>
                        The option names are relative to the section names, so the following configuration file part:
<screen>
[gui.accessibility]
visual_bell=yes
</screen>
                        is equivalent to
<screen>
gui.accessibility.visual_bell=yes
</screen>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        
        <para>
            <table id="POD_SERVER_CFG_TABLE"><title>PoD server configuration</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>key</entry>
                            <entry>value</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>server.work_dir</entry>
                            <entry>string (default: $HOME/.PoD)</entry>
                            <entry>PoD's working directory. Used by PoD modules to store temporary files, like pid files, for example.
                                A string of the value will be evaluated before it is used, it therefore can contain environment variables.</entry>
                        </row>
                        <row id="server.logfile_dir" xreflabel="server.logfile_dir">
                            <entry>server.logfile_dir</entry>
                            <entry>string (default: $HOME/.PoD/log)</entry>
                            <entry>A path for PoD's log files. By the defined path PoD modules will place log files.</entry>
                        </row>
                        <row>
                            <entry>server.logfile_overwrite</entry>
                            <entry>yes/no (default: yes)</entry>
                            <entry>Defines whether PoD should overwrite its log files when starting a new session
                                (PoD server's start/restart cycle)</entry>
                        </row>
                        <row>
                            <entry>server.log_level</entry>
                            <entry>numeric (default: 1)</entry>
                            <entry>Defines the level of the log. There are following numeric values are allowed:
                                <para>
                                    <itemizedlist>
                                        <listitem><para>0: Fault/Critical</para></listitem>
                                        <listitem><para>1: Fault/Critical/Info</para></listitem>
                                        <listitem><para>2: Fault/Critical/Info/Warning</para></listitem>
                                        <listitem><para>3: Fault/Critical/Info/Warning/Debug</para></listitem>
                                    </itemizedlist>
                                </para>
                            </entry>
                        </row>
                        <row>
                            <entry>server.agent_shutdown_if_idle_for_sec</entry>
                            <entry>numeric (default: 1800)</entry>
                            <entry>Shut down a server if its idle time is higher than the defined value in seconds.</entry>
                        </row>
                        <row>
                            <entry>server.agent_local_client_port_(min/max)</entry>
                            <entry>numeric (default: 20000/25000)</entry>
                            <entry>
                                <para>Recommended for advanced users only.</para>
                                The following range is used by PoD agent locally on the server host, when in the packet-forwarding mode.
                                Each PROOF client gets its proxy redirected vie the ports from that range.
                            </entry>
                        </row>
                        <row>
                            <entry>server.xproof_ports_range_(min/max)</entry>
                            <entry>numeric (default: 21001/22000)</entry>
                            <entry><para>Recommended for advanced users only.</para>
                                PoD's automatic port mapping algorithms use this range to dynamically assign ports
                                to xproof plug-in of xrootd when restarting a PoD server.
                                In multi-user/core environment, when there are many PoD processes on the
                                same physical machine, the automatic port mapping prevents different PoD process of
                                different users to disturb each other.
                            </entry>
                        </row>
                        <row>
                            <entry>server.agent_ports_range_(min/max)</entry>
                            <entry>numeric (default: 22001/23000)</entry>
                            <entry><para>Recommended for advanced users only.</para>
                                PoD's automatic port mapping algorithms use this range to dynamically assign ports
                                to <application>pod-agent</application> when restarting a PoD server.
                                In multi-user/core environment, when there are many PoD processes on the
                                same physical machine, the automatic port mapping prevents different PoD process of
                                different users to disturb each other.
                            </entry>
                        </row>
                        <row>
                            <entry>server.agent_threads</entry>
                            <entry>numeric (default: 5)</entry>
                            <entry> A number of threads in a thread pool.
                                The thread pool is used by the <application>pod-agent</application> to distribute tasks of a proxy, when in
                                the packet-forwarding mode.</entry>
                        </row>
                        <row>
                            <entry>server.agent_node_readbuffer</entry>
                            <entry>numeric (default: 5000)</entry>
                            <entry>A buffer size, used by the packet-forwarding algorithms (in bytes).
                                It will be allocated for each PoD worker.</entry>
                        </row>
                        <row>
                            <entry>server.packet_forwarding</entry>
                            <entry> yes/no/auto (default: auto)</entry>
                            <entry>If workers are behind a firewall than PoD will use its packet-forwarding (PF) algorithms
                                to maintain the PROOF traffic between server and workers.
                                By setting this key to "yes" you force PoD to use PF in any case. If "auto" is set than PoD
                                will decide on the fly whether to use PF for each worker individually based on the possibility
                                to directly connect to worker.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        
        <para>
            <table id="POD_WORKER_CFG_TABLE"><title>PoD worker configuration</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>key</entry>
                            <entry>value</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>worker.work_dir</entry>
                            <entry>string (default: $POD_LOCATION)</entry>
                            <entry>PoD's working directory. Used by PoD modules to store temporary files, like pid files, for example.
                                A string of the value will be evaluated before it is used, it therefore can contain environment variables.</entry>
                        </row>
                        <row>
                            <entry>worker.logfile_dir</entry>
                            <entry>string (default: $POD_LOCATION)</entry>
                            <entry>A path for PoD's log files. By the defined path PoD modules will place log files.</entry>
                        </row>
                        <row>
                            <entry>worker.logfile_overwrite</entry>
                            <entry>yes/no (default: yes)</entry>
                            <entry>Defines whether PoD should overwrite its log files when starting a new session
                                (PoD worker's start/restart cycle)</entry>
                        </row>
                        <row>
                            <entry>worker.log_level</entry>
                            <entry>numeric (default: 1)</entry>
                            <entry>Defines the level of the log. There are following numeric values are allowed:
                                <para>
                                    <itemizedlist>
                                        <listitem><para>0: Fault/Critical</para></listitem>
                                        <listitem><para>1: Fault/Critical/Info</para></listitem>
                                        <listitem><para>2: Fault/Critical/Info/Warning</para></listitem>
                                        <listitem><para>3: Fault/Critical/Info/Warning/Debug</para></listitem>
                                    </itemizedlist>
                                </para>
                            </entry>
                        </row>
                        <row>
                            <entry>worker.set_my_rootsys</entry>
                            <entry>yes/no (default: yes)</entry>
                            <entry>Whether to use user's ROOTSYS on workers.
                                If set to "yes", than the value of the worker.my_rootsys key, will be
                                exported to the workers. See worker.my_rootsys for more details.
                                If set to "no", PoD will download a default, pre-compiled version of
                                ROOT according to WN's environment.</entry>
                        </row>
                        <row>
                            <entry>worker.my_rootsys</entry>
                            <entry>string (default: $ROOTSYS)</entry>
                            <entry>User's ROOTSYS to use on workers.
                                If set_my_rootsys is set to "yes", than PoD will export bin and library locations of this ROOT version
                                on the worker nodes. This is especially useful if you use shared home file system on the nodes where
                                PoD workers are started or you know for sure the location of the ROOT installation on the worker nodes.
                                A string of the value will be evaluated before it is used, it therefore can contain environment variables.</entry>
                        </row>
                        <row>
                            <entry>worker.agent_shutdown_if_idle_for_sec</entry>
                            <entry>numeric (default: 1800)</entry>
                            <entry>Shut down a worker if its idle time is higher than the defined value in seconds.</entry>
                        </row>
                        <row>
                            <entry>worker.xproof_ports_range_(min/max)</entry>
                            <entry>numeric (default: 21001/22000)</entry>
                            <entry><para>Recommended for advanced users only.</para>
                                PoD's automatic port mapping algorithms use this range to dynamically assign ports
                                to xproof plug-in of xrootd when starting a PoD worker.
                                In multi-user/core environment, when there are many PoD processes on the
                                same physical machine, the automatic port mapping prevents different PoD process of
                                different users to disturb each other.
                            </entry>
                        </row>
                        <row>
                            <entry>worker.agent_node_readbuffer</entry>
                            <entry>numeric (default: 5000)</entry>
                            <entry>A buffer size, used by the packet-forwarding algorithms (in bytes).
                                It will be allocated for each PoD worker.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        
        <para>
            <table id="LSF_CFG_TABLE"><title>LSF plug-in configuration</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>key</entry>
                            <entry>value</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>lsf_plugin.email_job_output</entry>
                            <entry>yes/no (default: no)</entry>
                            <entry>The parameter specifies whether job's output is sent to the user by mail.
                                if "no" is set, output will be delivered to the log directory in std_[INDEX].err and std_[INDEX].out files</entry>
                        </row>
                        <row>
                            <entry>lsf_plugin.upload_job_log</entry>
                            <entry>yes/no (default: no)</entry>
                            <entry>The parameter specifies whether to upload jobs log files from workers when PoD jobs are completed.
                                Jobs log files include a full log of PROOF, XROOTD and pod-agent's log files.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        
        <para>
            <table id="PBS_CFG_TABLE">
                <title>PBS plug-in configuration</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>key</entry>
                            <entry>value</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>pbs_plugin.upload_job_log</entry>
                            <entry>yes/no (default: no)</entry>
                            <entry>The parameter specifies whether to upload jobs log files from workers when PoD jobs are completed.
                                Jobs log files include a full log of PROOF, XROOTD and pod-agent's log files.</entry>
                        </row>
                        <row id="pbs_plugin.options_file" xreflabel="pbs_plugin.options_file">
                            <entry>pbs_plugin.options_file</entry>
                            <entry>string (default: $POD_LOCATION/etc/Job.pbs.option)</entry>
                            <entry>
                                This file can be used to provide addirtional PBS (qsub) options. 
                                Just create a file and set its path in <xref linkend="pbs_plugin.options_file"/>. Write valid qsub options in one line, 
				like if you would write them in a command line when calling qsub.
                                PoD will automatically use it (if exists) while submitting PBS jobs.
				Be advised, that the following options are reserved and are set by PoD, if you want to adjust them in anyway, then, please,
				contact PoD support and we will find a way. The reserved options are: -N, -q, -j, -V, -v. 
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        
        <para>
            <table id="OGE_CFG_TABLE">
                <title>Grid Engine plug-in configuration</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>key</entry>
                            <entry>value</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>ge_plugin.upload_job_log</entry>
                            <entry>yes/no (default: no)</entry>
                            <entry>
                                The parameter specifies whether to upload jobs log files from workers when PoD jobs are completed.
                                Jobs log files include a full log of PROOF, XROOTD and pod-agent's log files.
                            </entry>
                        </row>
                        <row id="ge_plugin.options_file" xreflabel="ge_plugin.options_file">
                            <entry>ge_plugin.options_file</entry>
                            <entry>string (default: $POD_LOCATION/etc/Job.ge.option)</entry>
                            <entry>
                                PoD also supports an GE option file. If you want to provide some additional Grid Engine options
                                to your PoD jobs submitted to OE cluster, to select some specific resource or something like that,
                                than PoD gives you this possibility via an GE option file.
                                Just create a file and set its path in <xref linkend="ge_plugin.options_file"/>. Write valid GE options in it.
                                PoD will automatically use it (if exists) while submitting GE jobs.
                                See
                                <ulink url="http://gridengine.sunsource.net/nonav/source/browse/~checkout~/gridengine/doc/htmlman/htmlman1/qsub.html">qsub man page of GE</ulink>
                                for more information on the option file (search for the "-@" option in the man page).
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

            <para>
                <table id="Condor_CFG_TABLE">
                    <title>Condor plug-in configuration</title>
                    <tgroup cols="3">
                        <thead>
                            <row>
                                <entry>key</entry>
                                <entry>value</entry>
                                <entry>Description</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>condor_plugin.upload_job_log</entry>
                                <entry>yes/no (default: no)</entry>
                                <entry>The parameter specifies whether to upload jobs log files from workers when PoD jobs are completed.
                                    Jobs log files include a full log of PROOF, XROOTD and pod-agent's log files.</entry>
                            </row>
                            <row id="condor_plugin.options_file" xreflabel="condor_plugin.options_file">
                                <entry>condor_plugin.options_file</entry>
                                <entry>string (default: $POD_LOCATION/etc/Job.condor.option)</entry>
                                <entry>
                                    PoD is shipped with a default Condor job description file, which is used to
                                    submit PoD jobs. If users need to use additional settings or requirements, in order to tune
                                    PoD job submission, these settings can be provided via a file specified by the
                                    <xref linkend="condor_plugin.options_file"/> option.
                                    Settings from this file will be added to the default PoD job description file.
                                    The options file should in the format of standard condor description files.</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
        </para>
        
        <important>All port ranges in the PoD configuration must not have intersections.</important>
        
    </sect1>
    
    <sect1 id="users_env_script"><title>User's environment on workers</title>
        <para>
            PoD provides a possibility for users to execute a custom environment script on workers before PoD processes start.
        </para>
        <para>
            Users need to create a shell script file with the <filename>$POD_LOCATION/etc/user_worker_env.sh</filename> or
            <filename>$HOME/.PoD/user_worker_env.sh</filename> name and to code there all
            variables and commands to export to the workers. PoD will automatically transfer the script to each worker node and
            source it there.
        </para>
        <para>
            For example, If I need to set the path to my ROOT installation on workers. I would create the following file.
<programlisting>
#! /usr/bin/env bash

source /usr/local/pub/debian4.0/x86_64/gcc411-21/526-00/bin/thisroot.sh

export LD_LIBRARY_PATH=$MYLIBS/lib:$LD_LIBRARY_PATH
export MYVAR="some vallue :)"

# I need also my special profile there
source /etc/profile_extr
</programlisting>
        </para>
        <para>
            Be advised, that you need to recreate PoD worker package every time, when you modify the user script or if you removed it.
            To recreate the package, just call: <command><xref linkend="pod-prep-worker"/></command>
        </para>
        <para>
            The <link linkend="SSH_plugin">SSH plug-in</link> has it's own machinery to setup custom environment on worker nodes. Please check the <xref linkend="pod-ssh"/> documentation
            for more information.
        </para>
    </sect1>
    
    <sect1 id="XROOTD">
        <title>XROOTD/XPROOFD</title>
        <para>
            There is a default XROOTD configuration file, <filename>$HOME/.PoD/etc/xpd.cf</filename>.
            The file is generated from the template (<filename>$POD_LOCATION/etc/xpd.cf.in</filename>) each time PoD server is started.
            PoD uses this file to configure both local server and remote workers.
            
            <tip>
                <para>
                    In <ulink url="http://xrootd.slac.stanford.edu/">XROOTD documentation</ulink>
                    you can find details of fine tuning of xrootd. But it is only recommended for advanced users.
                </para>
            </tip>
            
            The default xrootd configuration, which comes with PoD should be sufficient for basic operations.
            In most of use cases it is not needed to modify the configuration.
        </para>
        <para>
            If you need additional xpd configuration settings, you can add custom xpd configuration files.
            PoD will scan for <filename>$HOME/.PoD/user_xpd.cf*</filename> and for <filename>$POD_LOCATION/etc/user_xpd.cf*</filename>
            and append the found files to the main xpd.cf. The star symbol in the file names can be change to any other symbol.
            For example, the following files will be appended to the main xpd.cf:
            <filename>$POD_LOCATION/etc/user_xpd.cf0</filename>,
            <filename>$POD_LOCATION/etc/user_xpd.cf1</filename>,
            <filename>$POD_LOCATION/etc/user_xpd.cf2</filename>.
        </para>
        <para>
            PoD is only meant to help to setup a PROOF cluster on the fly using remote worker nodes. A data access is not
            a part of its responsibility.</para>
    </sect1>
    
</chapter>
