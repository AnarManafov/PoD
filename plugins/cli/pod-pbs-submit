#!/usr/bin/env bash
#/************************************************************************/
#/**
# * @file pod-submit
# * @brief a script, which can be used to manually submit PoD jobs using a defined RMS
# * @author Anar Manafov A.Manafov@gsi.de
# *//*
#
#        created by:        Anar Manafov
#                           2010-11-10
#
#        Copyright (c) 2010-2012 GSI, Scientific Computing division. All rights reserved.
#*************************************************************************/
# 
# The following variables guarantied to be exported by our parent:
# POD_UI_LOG_LOCATION
# POD_UI_LOCATION
#
#
PRIVATE_TOOLS="$POD_LOCATION/bin/private"
#=============================================================================
# ***** MAIN  *****
#=============================================================================
QUEUE="proof"
NUM_WRK=10
while getopts "q:n:h" opt; do
   case $opt in
      q)
       QUEUE="$OPTARG"
       ;;
      n)
       NUM_WRK=$OPTARG
       ;;
      h) 
       usage
       exit 0
       ;;
     \?)
       echo "Invalid option: -$OPTARG" >&2
       exit 1
       ;;
   esac
done

if [ -z "$POD_UI_LOG_LOCATION" ]; then
   echo "Error: PoD UI Log directory is not defined. Please, check you configuration."
fi

# LOG
eval upload_job_log=$(pod-user-defaults --key pbs_plugin.upload_job_log)
OUTPUT_LOG=""
if [ "$upload_job_log" = "1" ]; then
   # For some versions of OpenPBS we must explicitly specify the log file name in case
   # when an array job submission is used.
   _NOW=$(date +"%b-%d-%y-%H-%M-%S")
   OUTPUT_LOG=" -o $POD_UI_LOG_LOCATION\joblog_$NOW.oe"
else
   OUTPUT_LOG=" -o /dev/null"
fi

# add PoD worker script as a payload to the job script
eval WRK_SCRIPT=$(pod-user-defaults --wrkscript)
eval WRK_DIR=$(pod-user-defaults --wn-sandbox-dir)
INPUT_JOB_SCRIPT="$POD_LOCATION/etc/Job.pbs.in"
JOB_SCRIPT="$WRK_DIR/Job.pbs"
WRK_SCRIPT_NAME=$(basename $WRK_SCRIPT)
TMP_WRK_SCRIPT=$WRK_DIR/$WRK_SCRIPT_NAME
pushd $(pwd) &> /dev/null
cp $WRK_SCRIPT $TMP_WRK_SCRIPT
cd $WRK_DIR
tar -czvf $WRK_SCRIPT_NAME.tgz $WRK_SCRIPT_NAME
popd 
$PRIVATE_TOOLS/pod-addpayload --binary $TMP_WRK_SCRIPT.tgz $INPUT_JOB_SCRIPT $JOB_SCRIPT
if (( 0 != $? )); then
   echo "error: failed to add payload to the job script."
   exit 1
fi

chmod +x $JOB_SCRIPT


# A job array parameter is different in PBS (torque) and PBS pro, it is -t and -J accordingly
# We try to check a version of PBS to figure out, what to use
pbs_pro=$(pbsnodes --version 2>&1 | grep -o PBSPro)
pbs_job_array_param="-J 1-$NUM_WRK"
if [ -z $pbs_pro ]; then
   pbs_job_array_param="-t 1-$NUM_WRK"
fi

# Additional PBS options
eval options_file=$(pod-user-defaults --key pbs_plugin.options_file)
if [ -f $options_file ]; then
   EXTRA_PBS_OPTIONS=$(cat $options_file) 
fi

jobid=$(qsub $EXTRA_PBS_OPTIONS -N pod -q $QUEUE $pbs_job_array_param -j oe $OUTPUT_LOG -V -v "POD_UI_LOCATION=$POD_LOCATION, POD_UI_LOG_LOCATION=$POD_UI_LOG_LOCATION" $JOB_SCRIPT)
# we need to create a logs output dir
if (( $? == 0 )); then
   echo "Job ID: $jobid"
   if [ "$upload_job_log" = "1" ]; then
      PARENT_PBS_JOBID=$(echo $jobid | egrep -o '^[[:digit:]]*')
      mkdir -p $POD_UI_LOG_LOCATION/$PARENT_PBS_JOBID
   fi
else
   echo "Error submitting job. $jobid"
fi

