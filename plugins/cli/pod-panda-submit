#!/usr/bin/env bash
#/************************************************************************/
#/**
# * @file pod-submit
# * @brief a script, which can be used to manually submit PoD jobs using a defined RMS
# * @author Anar Manafov A.Manafov@gsi.de
# *//*
#
#        created by:        Anar Manafov
#                           2012-10-13
#
#        Copyright (c) 2012 GSI, Scientific Computing division. All rights reserved.
#*************************************************************************/
# 
# The following variables guarantied to be exported by our parent:
# POD_UI_LOG_LOCATION
# POD_UI_LOCATION
#
#
#=============================================================================
# ***** MAIN  *****
#=============================================================================
QUEUE=""
NUM_WRK=10
while getopts "q:n:h" opt; do
   case $opt in
      q)
       QUEUE="$OPTARG"
       ;;
      n)
       NUM_WRK=$OPTARG
       ;;
      h) 
       usage
       exit 0
       ;;
     \?)
       echo "Invalid option: -$OPTARG" >&2
       exit 1
       ;;
   esac
done

if [ -z "$POD_UI_LOG_LOCATION" ]; then
   echo "Error: PoD UI Log directory is not defined. Please, check you configuration."
fi

# LOG
#eval upload_job_log=$(pod-user-defaults --key glite_plugin.upload_job_log)
#OUTPUT_LOG=""
#if [ "$upload_job_log" = "1" ]; then
#   OUTPUT_LOG=" -o $POD_UI_LOG_LOCATION"
#else
#   OUTPUT_LOG=" -o /dev/null"
#fi

WORK_DIR=$(pod-user-defaults --key server.work_dir)
eval WORK_DIR="$WORK_DIR"


JOBSCRIPT=$(basename $POD_WRK_SCRIPT)
NICKNAME=$(openssl x509 -text  -noout -in $X509_USER_PROXY | egrep -o 'nickname\.\.(.*)\..' | awk -F '.' '{print $3}')

# Create a new directory and go into the directory cd prunTest (this is important as prun sends to the grid (almost) all files in and bellow your current directory).
pushd $(pwd) &> /dev/null
SUB_WRK_DIR=$(mktemp -d /tmp/PoD_XXXXXXXXXX)
if [ -z $SUB_WRK_DIR ]; then
   echo "Error: Can't create a working directory."
   exit 1
fi
cd $SUB_WRK_DIR || exit 1
cp $POD_WRK_SCRIPT .
chmod +x $JOBSCRIPT
# global variables
# submit
if [ -n "$QUEUE" ]; then
   SITE="--site $QUEUE"
fi
prun $SITE --maxFileSize=3072000 --noBuild --outputs="pod-agent.client.log, proof_log.tgz"  --outDS user.$NICKNAME.pod --nJobs=$NUM_WRK  --exec $JOBSCRIPT
stat=$?
popd &> /dev/null
rm -rf $SUB_WRK_DIR

if (( $stat == 0 )); then
    echo""
#   echo "Job ID: $jobid"
#   if [ "$upload_job_log" = "1" ]; then
#      mkdir -p  $POD_UI_LOG_LOCATION/$jobid
#   fi
else
   echo "Error submitting job. $jobid"
fi

