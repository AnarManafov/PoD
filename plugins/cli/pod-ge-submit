#!/usr/bin/env bash
#/************************************************************************/
#/**
# * @file pod-submit
# * @brief a script, which can be used to manually submit PoD jobs using a defined RMS
# * @author Anar Manafov A.Manafov@gsi.de
# *//*
#
#        created by:        Anar Manafov
#                           2010-11-10
#
#        Copyright (c) 2010-2012 GSI, Scientific Computing division. All rights reserved.
#*************************************************************************/
# 
# The following variables guarantied to be exported by our parent:
# POD_UI_LOG_LOCATION
# POD_UI_LOCATION
#
#
PRIVATE_TOOLS="$POD_LOCATION/bin/private"
#=============================================================================
# ***** MAIN  *****
#=============================================================================
QUEUE=""
NUM_WRK=10
while getopts "q:n:h" opt; do
   case $opt in
      q)
       QUEUE="$OPTARG"
       ;;
      n)
       NUM_WRK=$OPTARG
       ;;
      h) 
       usage
       exit 0
       ;;
     \?)
       echo "Invalid option: -$OPTARG" >&2
       exit 1
       ;;
   esac
done

if [ -z "$POD_UI_LOG_LOCATION" ]; then
   echo "Error: PoD UI Log directory is not defined. Please, check you configuration."
fi

# LOG
eval upload_job_log=$(pod-user-defaults --key ge_plugin.upload_job_log)
OUTPUT_LOG=""
if [ "$upload_job_log" = "1" ]; then
   OUTPUT_LOG=" -o $POD_UI_LOG_LOCATION"
else
   OUTPUT_LOG=" -o /dev/null"
fi

# We assume, that shared home file system is used.
# qsub with parameters:
# -V          export all environment variables
# -terse      tersed output, print only the job-id
# -j yes      merge std out and err to one file
eval GE_OPTION_FILE=$(pod-user-defaults --key ge_plugin.options_file)
ge_job_array_param="-t 1-$NUM_WRK"
job_name="PoD_GE_Job"
# GE option file
if [ -r $GE_OPTION_FILE ]; then
   GE_USE_OPTION_FILE=" -@ $GE_OPTION_FILE"
fi

# add PoD worker script as a payload to the job script
eval WRK_SCRIPT=$(pod-user-defaults --wrkscript)
eval WRK_DIR=$(pod-user-defaults --wn-sandbox-dir)
INPUT_JOB_SCRIPT="$POD_LOCATION/etc/Job.ge.in"
JOB_SCRIPT="$WRK_DIR/Job.ge"
WRK_SCRIPT_NAME=$(basename $WRK_SCRIPT)
TMP_WRK_SCRIPT=$WRK_DIR/$WRK_SCRIPT_NAME
pushd $(pwd) &> /dev/null
cp $WRK_SCRIPT $TMP_WRK_SCRIPT
cd $WRK_DIR
tar -czvf $WRK_SCRIPT_NAME.tgz $WRK_SCRIPT_NAME
popd 
$PRIVATE_TOOLS/pod-addpayload --uuencode $TMP_WRK_SCRIPT.tgz $INPUT_JOB_SCRIPT $JOB_SCRIPT
if (( 0 != $? )); then
   echo "error: failed to add payload to the job script."
   exit 1
fi

chmod +x $JOB_SCRIPT

# submit
if [ -n "$QUEUE" ]; then
   QUEUE="-q $QUEUE"
fi
jobid=$(qsub -wd /tmp/ -b yes -j yes -V -N $job_name -terse $ge_job_array_param $QUEUE $OUTPUT_LOG $GE_USE_OPTION_FILE $JOB_SCRIPT)
# we need to create a logs output dir
stat=$?
# extract a job id only, without an array indexes
jobid=$(echo $jobid | cut -f3 -d" " | cut -f1 -d.)
if (( $stat == 0 )); then
   echo "Job ID: $jobid"
   if [ "$upload_job_log" = "1" ]; then
      mkdir -p  $POD_UI_LOG_LOCATION/$jobid
   fi
else
   echo "Error submitting job. $jobid"
fi

