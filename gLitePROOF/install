#! /bin/bash
##/************************************************************************/
##/*! \file install
##  *//*
##
##         version number:     $LastChangedRevision$
##         created by:         Anar Manafov
##                             2008-02-06
##         last changed by:    $LastChangedBy$ $LastChangedDate$
##
##         Copyright (c) 2008 GSI GridTeam. All rights reserved.
##*************************************************************************/

############ Vars ######################
VERSION=2.0.5

INSTALL_PATH=/tmp/test/gLitePROOFpackage

GAW_PKG=glite-api-wrapper-3.1.0.1875
GAW_LINK=http://www-linux.gsi.de/~manafov/D-Grid/Release/Nightly
GAW_OPTIONS="--prefix=$INSTALL_PATH --enable-tests=no"

PROOFAgent_PKG=proofagent-1.0.4.1872
PROOFAgent_LINK=http://www-linux.gsi.de/~manafov/D-Grid/Release/Nightly
PROOFAgent_OPTIONS="--prefix=$INSTALL_PATH"

PAConsole_PKG=PAConsole-1.0.4
PAConsole_LINK=http://www-linux.gsi.de/~manafov/D-Grid/Release/Nightly
PAConsole_OPTIONS=
# QT 4.2.3
export QTDIR=/usr/lib/qt4
export QTINC=/usr/include
export QTLIB=/usr/lib/qt4
# gLite
#export GLITE_LOCATION=
export XERCESC_LOCATION=$GLITE_LOCATION/../external/opt/xerces-c
export CLASSADS_LOCATION=$GLITE_LOCATION/../classads
export BOOST_LOCATION=$GLITE_LOCATION/../external/usr/
export GRIDSITE_INSTALL_PATH=$GLITE_LOCATION/../external/usr/


APP_PATH=$INSTALL_PATH/app
TMP_PATH=$APP_PATH/tmp
########################################






############ Funstions ##################
CreateCFG()
{
echo "Creating default cfg files..."
# generating gLitePROOF_ENV.sh
   cp -f template/gLitePROOF_ENV.sh.template ./gLitePROOF_ENV.sh
   eval sed -i 's%_G_WRK_DIR%$INSTALL_PATH%g' ./gLitePROOF_ENV.sh
# Using eval to force variable substitution
# changing _G_MASTER_HOSTNAME to a host name (FQDN) of the xrootd master:
    MASTER_HOST=`hostname -f`
# generating xpd.cf
    cp -f template/xpd.cf.template etc/xpd.cf
    eval sed -i 's%_G_MASTER_HOSTNAME%$MASTER_HOST%g' etc/xpd.cf
    # populating the tmp dir.
    _TMP_DIR=`mktemp -d /tmp/gLitePROOF_XXXXXXXXXX`
    eval sed -i 's%_G_SERVER_TMP_DIR%$_TMP_DIR%g' etc/xpd.cf
# generating proofagent.cfg.xml
    cp -f template/proofagent.cfg.xml.template etc/proofagent.cfg.xml
    eval sed -i 's%_G_MASTER_HOSTNAME%$MASTER_HOST%g' etc/proofagent.cfg.xml

    return 0
}

_GetModule() #parameters: $1 - package name; $2 - URL
{
   wget --tries=2 --directory-prefix=$TMP_PATH $2/$1.tar.gz  || return 1
   tar -C $APP_PATH -xzf $TMP_PATH/$1.tar.gz || return 1
}

InstallGAW()
{
    _GetModule $GAW_PKG $GAW_LINK

    pushd $APP_PATH/$GAW_PKG
    ./configure $GAW_OPTIONS || (popd; return 1)
    gmake || (popd; return 1)
    gmake install || (popd; return 1)
    popd
     
    # source GAW's config - other modules need it
    GAW_ENV=$INSTALL_PATH/bin/gaw_env.sh
    if [ -e $GAW_ENV ]; then
	echo "Sourcing GAW's env.: "$GAW_ENV
    	. $GAW_ENV
    else
	# TODO: msg me!
	return 1
    fi
  
    echo
    echo "---> GAW has been installed."
    return 0
}

InstallPROOFAgent()
{
    _GetModule $PROOFAgent_PKG $PROOFAgent_LINK

    pushd $APP_PATH/$PROOFAgent_PKG
    ./configure $PROOFAgent_OPTIONS ||  (popd; return 1)
    eval gmake ||  (popd; return 1)
    gmake install ||  (popd; return 1)
    popd
       
    echo
    echo "---> PROOFAgent has been installed."
    return 0
}

InstallPAConsole()
{
    _GetModule $PAConsole_PKG $PAConsole_LINK

    pushd  $APP_PATH/$PAConsole_PKG
    ./build.sh ||  (popd; return 1)
    cp Build/PAConsole $INSTALL_PATH/bin/
    popd
    
    echo
    echo "---> PAConsole has been installed."
    return 0
}

InstallApps()
{
    mkdir -p $TMP_PATH

    InstallGAW || return 1
    InstallPROOFAgent || return 1
    InstallPAConsole || return 1

    return 0
}






####### Main
echo "--------------------"
echo "gLitePROOF v."$VERSION
echo "--------------------"
echo

InstallApps

RET_VAL=$?
echo
echo
if [ "X$RET_VAL" = "X0" ]; then
  echo "---> All gLitePROOF modules have been successfully installed."
else
  echo "---> ERROR: Failed to install gLitePROOF modules."
fi

echo "---> deleting temporary files..."
rm -rf $TMP_PATH

if [ "X$RET_VAL" != "X0" ]; then
    exit 1;
fi

CreateCFG || (echo "Error: can't create cfg files."; exit 1)

echo "Installation successfully done."
exit 0
