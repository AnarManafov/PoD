<!--
Configuration
-->
    <chapter id="Configuration">
        <title>Configuration</title>
        <chapterinfo>
            <releaseinfo>$Revision$</releaseinfo>
               <pubdate>$Date$</pubdate>
              <publisher><publishername>$LastChangedBy$</publishername></publisher>
       </chapterinfo>
    <para>
    As it was mentioned above <application>gLitePROOF</application> consists of several modules
    and to configure <application>gLitePROOF</application> one should configure some of these modules.
    </para>
    <sect1 id="GAW">
      <title>GAW</title>
      <para>
      There is GAW's configuration file in the
      <filename class="directory">/tmp/test/gLitePROOFpackage/etc</filename> directory, it's called
      <filename>glite-api-wrapper.cfg.xml</filename>. Through this file one can configure GAW engine.
      The file is an XML file and it's XML Schema documentation and description of all configuration keys could
      be found by the following <ulink url="http://www-linux.gsi.de/~manafov/D-Grid/docz/">link</ulink>.
      </para>
      <para>
      Since gLitEPROOF uses GAW to submit gLite jobs the important parameter to configure would be
      a <varname>wmp_endpoint</varname>. This parameter holds the value for the default WMProxy endpoint to use.
      <tip>
      <para>
      GAW has a smart method for endpoint guessing. So, if you have could configured gLite UI,
      in terms that WMProxy endpoints are configured for your VO, then GAW will find the best match and
      will use it, and you therefore could just keep the <varname>wmp_endpoint</varname> value empty or
      you could remove this key from the configuration file at all. Otherwise GAW will use the value from
      the configuration file.      
      </para>
      </tip>
        All other settings may be changed to adjust gLitePROOF according to personal needs.
        </para>
    </sect1>
    <sect1 id="PROOFAgent">
      <title>PROOFAgent</title>
      <para>
      PROOFAgent is a kind of proxy and manager application for gLitePROOF. This application manages
      communication with gLitePROOF workers, where PROOFAgent clients are working.
      There is GAW's configuration file in the <filename class="directory">/tmp/test/gLitePROOFpackage/etc</filename>
      directory, it's called <filename>proofagent.cfg.xml</filename>. This configuration file actually
      holds both client and server configuration, so be careful while changing it.
      The file is an XML file and it's XML Schema documentation and description of all configuration keys could
      be found by the following <ulink url="http://www-linux.gsi.de/~manafov/D-Grid/docz/">link</ulink>.
      </para>
        <warning>
      <para>
      PROOFAgent works with instances. The default configuration file is holds two instances: server, client.
      It is recommended for users to keep it that way. Only Advanced users may change this.
      </para>
      </warning>
      <para>
      The default configuration of PROOFAgent assumes, that:
      <itemizedlist>
      <listitem><para>the port range 20000-25000 (well known as default Globus port range)
      is open on worker nodes for outgoing connection,</para></listitem>
        <listitem><para>PROOFAgent server located on the machine where gLitePROOF has been installed,</para></listitem>
        <listitem><para>PROOFAgent server accepts connections on 21111 port
        (open this port if you have a firewall on your UI or reconfigure PROOFAgent to use any other available port).</para></listitem>
        </itemizedlist>
        </para>   
    </sect1>
    <sect1 id="XROOTD">
      <title>XROOTD</title>
      <para>
      There is a default XROOTD configuration file, which is located in the <filename class="directory">/tmp/test/gLitePROOFpackage/etc</filename>
      directory and it's called <filename>xpd.cf</filename>. gLitePROOF uses this file to configure both local redirector and
      remote workers.
            
      <tip>
      <para>
      In <ulink url="http://xrootd.slac.stanford.edu/">XROOTD documentation</ulink>
      you can find details of fine tuning of xrootd. But it is only recommended for advanced users.
      </para>
      </tip>
      
      The default xrootd configuration, which comes with gLitePROOF should be sufficient for basic operations.
      In most of use cases it is not needed to modify the configuration.
      </para>
      <para>
      gLitePROOF is only meant to help to setup a PROOF cluster on the fly using a gLite worker nodes. A data access is not
      really a part of responsibility of gLitePROOF. The default configuration of gLitePROOF offers a possibility to access data
      files from the server machine (user's workspace) using xrootd vie port 20094 and the following shared folder
      <filename class="directory">/opt/PROOF_DATA/</filename>. Users may want to use another xrootd facility to access data or
      reconfigure gLitePROOF's xrootd to use different port and location. To do so the following variables must be updated in
      <filename>xpd.cf</filename> file: <varname>xrd.port</varname>, <varname>xrootd.export</varname> (for the server host),
      <varname>olb.path</varname>(for the server host).

      <tip>
      <para>
      It is recommended to use own xrootd facility to access data files. Using user's local machine for data access is very
      inefficient. gLitePROOF provides this ability only for testing purpose.
      </para>
      </tip>
      
      </para>      
    </sect1>
    <sect1 id="A_JDL_file">
      <title>A JDL file</title>
      <para>
      gLitePROOF submits its workers with help of a JDL file. Default JDL files are a part of gLitePROOF packages.
      User can find them in the <filename class="directory">/tmp/test/gLitePROOFpackage/etc</filename> folder.
      There are <filename>gLitePROOF.jdl</filename> and <filename>gLitePROOF_FZK.jdl</filename> files in this folder.
      The first file is generic gLitePROOF jdl file and the second one is optimized for a specific FZK gLite computing element.
        This files could be used as examples or real job files.
      </para>
      <para>
      It is allowed to modify JDL files or create a custom one in order to tune job requirements for
      a specific site or a resource.
      The file in anyway must be inherited from <filename>gLitePROOF.jdl</filename>.       
      </para>
      <important><para>
       If you want to use a custom JDL file, be advised that
       the following keys of JDL file must be kept unchanged:
       RetryCount, ParameterStart, PARAMETERS, JobType, Executable, ParameterStep, StdOutput, OutputSandbox, Type,
       StdError, InputSandbox. Otherwise gLitePROOF functionality could be broken.
      </para></important>
      
    </sect1>    
  </chapter>