#!/usr/bin/env bash
#/************************************************************************/
#/**
# * @file pod-submit
# * @brief a script, which can be used to manually submit PoD jobs using a defined RMS
# * @author Anar Manafov A.Manafov@gsi.de
# *//*
#
#        created by:        Anar Manafov
#                           2010-01-28
#
#        Copyright (c) 2010 GSI, Scientific Computing group. All rights reserved.
#*************************************************************************/
#
# Usage: pod-submit [-r [lsf:pbs]] [-q] [-n X] [-h]
# -r rms : Name of the resource management system (supported: lsf, pbs).
# -q     : Submit the jobs to specified queue.
# -n X   : Desired number or PROOF workers.
# -h     : Show summary of options.


#=============================================================================
# ***** USAGE *****
#=============================================================================
usage() {
    cat <<EOF
PoD command line utility, which can be used to manually submit PoD jobs using LSF.
   Copyright (C) 2010 GSI, Scientific Computing group.

Usage: pod-info [OPTION]
     -r rms      Name of the resource management system (supported: lsf, pbs).
     -q name     Submit the jobs to specified queue (for rms=[lsf:pbs]).
     -n X        Desired number or PROOF workers.
     -h          Show summary of options.

Report bugs to http://pod.gsi.de
EOF
}

#=============================================================================
# ***** MAIN  *****
#=============================================================================
# checking the number of parameters
if [ $# -ne 6 ]; then
    usage
    exit 1
fi

RMS="lsf"
QUEUE="proof"
NUM_WRK=10
while getopts ":q:n:hr:" opt; do
  case $opt in
  q)
     QUEUE="$OPTARG"
     ;;
  n)
    NUM_WRK=$OPTARG
    ;;
  r) 
    RMS=$OPTARG
    ;;
  h) 
    usage
    exit 0
    ;;
  \?)
    echo "Invalid option: -$OPTARG" >&2
    exit 1
    ;;
  esac
done

# check supported RMS
if [ "$RMS" != "lsf" -a "$RMS" != "pbs" ]; then
  echo "Error: \"$RMS\" is not supported by this command."
  echo ""
  usage
  exit 1
fi


EMAIL_JOB_OUTPUT=$(pod-user-defaults -c $POD_LOCATION/etc/PoD.cfg --key lsf_plugin.email_job_output)
eval LOG_DIR=$(pod-user-defaults -c $POD_LOCATION/etc/PoD.cfg --key server.logfile_dir)

if [ "$RMS" = "lsf" ]; then
  # LSF 
  JOB_NAME="$BASHPID[1-$NUM_WRK]"
  OUTPUT=""
  if [ $EMAIL_JOB_OUTPUT -eq 0 ]; then
      OUTPUT=" -o $LOG_DIR/%J/std_%I.out -e $LOG_DIR/%J/std_%I.err"
  fi
  bsub -q $QUEUE -J $JOB_NAME $OUTPUT $POD_LOCATION/etc/Job.lsf
elif  [ "$RMS" = "pbs" ]; then
  # PBS
  # 
  # A job array parameter is different in PBS (torque) and PBS pro, it is -t and -J accordingly
  # We try to check a version of PBS to figure out, what to use
  pbs_pro=$(pbsnodes --version 2>&1 | grep -o PBSPro)
  pbs_job_array_param="-J 1-$NUM_WRK"
  if [ -z pbs_pro ]; then
    pbs_job_array_param="-t 1-$NUM_WRK"
  fi

  PBS_SHARED_HOME=$(pod-user-defaults -c $POD_LOCATION/etc/PoD.cfg --key pbs_plugin.shared_home)
  if [ $PBS_SHARED_HOME -eq 0 ]; then
    jobid=$(qsub -N pod -q $QUEUE $pbs_job_array_param -j oe -o $LOG_DIR/ -v "POD_UI_LOCATION=$POD_LOCATION, POD_UI_LOG_LOCATION=$LOG_DIR" $POD_LOCATION/etc/Job.pbs)
  else
    jobid=$(qsub -N pod -q $QUEUE $pbs_job_array_param -j oe -o $LOG_DIR/ -V -v "POD_UI_LOCATION=$POD_LOCATION, POD_UI_LOG_LOCATION=$LOG_DIR" $POD_LOCATION/etc/Job.pbs)
  fi
# we need to create a logs output dir
  stat=$?
  if test $stat -eq 0; then
    echo "Job ID: $jobid"
    PARENT_PBS_JOBID=$(echo $jobid | egrep -o '^[[:digit:]]*')
    mkdir -p  $LOG_DIR/$PARENT_PBS_JOBID
  else
    echo "Error submitting job. $jobid"
  fi
  
fi

exit 0
