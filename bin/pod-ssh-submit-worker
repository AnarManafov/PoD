#!/usr/bin/env bash
#/************************************************************************/
#/**
# * @file pod-ssh-submit-worker
# * @brief 
# * @author Anar Manafov A.Manafov@gsi.de
# *//*
#
#        created by:        Anar Manafov
#                           2010-06-10
#
#        Copyright (c) 2010 GSI, Scientific Computing group. All rights reserved.
#*************************************************************************/
#
# Usage
# $1 ssh host (login@host.fqdn)
# $2 remote working dir
# $3 a number of PROOF workers to spawn
# $4 ssh params


TOOL_NAME="pod-ssh-submit-worker"
WRK_P="$POD_LOCATION/etc/pod-worker.tar.gz"
WRK_S_R="PoDWorker.sh $3"
WRK_S_L="$POD_LOCATION/etc/PoDWorker.sh"
TIMEOUT=30

SSH_CMD="ssh -o BatchMode=yes -o StrictHostKeyChecking=no -o ConnectTimeout=$TIMEOUT -o PasswordAuthentication=no -n -f -q $1 $4"

# a pod-ssh communication pipe (log engine)
pipe="$POD_LOCATION/.ssh_plugin_pipe"
if [[ ! -p $pipe ]]; then
    echo "$TOOL_NAME error: pod-ssh log engine is not running"
    exit 1
fi
logMsg()
{
# date format
#RFC-2822:
# *    www, dd mmm yyyy hh:mm:ss +zzzz
#
# Don't use date -R since it's a GNU specific implementation (doesn't work on Mac, for example)
    echo -e "**\t[$(date '+%a, %d %b %Y %T %z')]\t$1" > $pipe
}

logMsg "$TOOL_NAME is started for $1"

# check that the worker package is ready
if [ ! -r $WRK_P ]; then
   logMsg "$TOOL_NAME error: can't read a PoD worker package \"$WRK_P\""
   exit 1
fi

# send a worker package and worker's script
# use rsync since it can automatically create a remote working dir
rsync -aq -e "ssh -o BatchMode=yes -o StrictHostKeyChecking=no $4" $WRK_P $WRK_S_L $1:$2/ &> $pipe
if [ $? -ne 0 ]; then
    logMsg "$TOOL_NAME error: failed to send worker's package"
    exit 1
fi

# execute the worker script
$SSH_CMD "nohup bash -c \"cd $2 && ./$WRK_S_R &> ssh_worker.log \" &> ssh_worker.log  < /dev/null &" &> $pipe
if [ $? -ne 0 ]; then
    logMsg "$TOOL_NAME error: faild to start PoD worker"
    exit 1
fi

exit 0

