#!/usr/bin/env bash
#/************************************************************************/
#/**
# * @file pod-ssh-submit-worker
# * @brief 
# * @author Anar Manafov A.Manafov@gsi.de
# *//*
#
#        created by:        Anar Manafov
#                           2010-06-10
#
#        Copyright (c) 2010-2011 GSI, Scientific Computing division. All rights reserved.
#*************************************************************************/
#
#=============================================================================
# ***** USAGE *****
#=============================================================================
usage() {
    cat <<EOF
PoD command line utility, which is used to submit a PoD worker via ssh. It's used by pod-ssh utility.
   Copyright (C) 2010 GSI, Scientific Computing group.

Usage: pod-ssh-submit-worker [OPTION]
     -i id			ID of the worker.
     -l ssh login@host.fqdn 	SSH connection string.
     -w dir      		Remote working directory.
     -n X        		Desired number or PROOF workers.
     -o SSH_Opt			Additinal SSH parameters.
     -d				Verbose mode. Causes pod-ssh-submit-worker to print debugging messages about its progress.
     -h          		Show summary of options.

Report bugs to http://pod.gsi.de
EOF
}
#=============================================================================
# ***** OPTARG *****
#=============================================================================
WORKER_ID=""
SSH_CON_STR=""
RDIR=""
NWORKERS=1
SSHOPT=""
DEBUG=""
while getopts ":i:l:w:n:o:dh" opt; do
  case $opt in
  i)
    WORKER_ID="$OPTARG"
    ;;
  l)
    SSH_CON_STR="$OPTARG"
    ;;
  w) 
    RDIR="$OPTARG"
    ;;
  n)
    NWORKERS=$OPTARG
    ;;
  o)
    SSHOPT="$OPTARG"
    ;;
  d)
    DEBUG="YES"
    ;;
  h) 
    usage
    exit 0
    ;;
  \?)
    echo "Invalid option: -$OPTARG" >&2
    exit 1
    ;;
  esac
done

if [ -z "$SSH_CON_STR" ]; then
   usage
   exit 1
fi

#=============================================================================
# ***** VARS *****
#=============================================================================
TOOL_NAME="pod-ssh-submit-worker"
eval WORK_DIR=$(pod-user-defaults --key server.work_dir)
eval WRK_P=$(pod-user-defaults --wrkpkg)
eval WRK_S_L=$(pod-user-defaults --wrkscript)
WRK_S_R="$(basename "$WRK_S_L") $NWORKERS"

SSH_OPT_INT="-o BatchMode=yes -o StrictHostKeyChecking=no -o ConnectionAttempts=5 -o FallBackToRsh=no -o PasswordAuthentication=no"
SSH_CMD="ssh $SSH_OPT_INT -q $SSH_CON_STR $SSHOPT"
#=============================================================================
# ***** POD-SSH NAMED PIPE *****
#=============================================================================
# a pod-ssh communication pipe (log engine)
eval pipe_dir="$WORK_DIR"
pipe="$pipe_dir/.pod_ssh_pipe"
if [[ ! -p $pipe ]]; then
    echo "$TOOL_NAME error: pod-ssh log engine is not running"
    exit 1
fi
#=============================================================================
# ***** LOG *****
#=============================================================================
# function read input from stdin and write output to the stdout
# caller must take care about where come stdin and where go stdout
logMsgPipe() 
{
  while read data
  do
      logMsg "$data" 
  done
}
logMsg()
{
# date format
#RFC-2822:
# *    www, dd mmm yyyy hh:mm:ss +zzzz
#
# Don't use date -R since it's a GNU specific implementation (doesn't work on Mac, for example)
   if [ -n "$DEBUG" ]; then
      echo -e "$WORKER_ID\t[$(date '+%a, %d %b %Y %T %z')]\t$1" > $pipe
   fi
}
#=============================================================================
# ***** MAIN *****
#=============================================================================
logMsg "$TOOL_NAME is started for $SSH_CON_STR (dir: $RDIR, nworkers: $NWORKERS, sshopt: $SSHOPT)"

# check that the worker package is ready
if [ ! -r $WRK_P ]; then
   logMsg "$TOOL_NAME error: can't read a PoD worker package \"$WRK_P\""
   exit 1
fi

# send a worker package and worker's script
# use rsync since it can automatically create a remote working dir
rsync -aq -e "ssh $SSH_OPT_INT $SSHOPT" $WRK_P $WRK_S_L $SSH_CON_STR:$RDIR/ 2>&1 | logMsgPipe
if (( ${PIPESTATUS[0]} != 0 )); then
    logMsg "$TOOL_NAME error: failed to send worker's package"
    exit 1
fi

# execute the worker script
$SSH_CMD "nohup bash -c \"cd $RDIR && ./$WRK_S_R &> $RDIR/ssh_worker.log \" &> $RDIR/ssh_worker.log  < /dev/null &" 2>&1 | logMsgPipe
if (( ${PIPESTATUS[0]} != 0 )); then
    logMsg "$TOOL_NAME error: failed to start PoD worker"
    exit 1
fi

exit 0

